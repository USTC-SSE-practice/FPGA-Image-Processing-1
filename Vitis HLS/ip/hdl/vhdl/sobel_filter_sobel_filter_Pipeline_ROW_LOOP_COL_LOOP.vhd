-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_filter_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    local_input_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_ce0 : OUT STD_LOGIC;
    local_input_V_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_ce1 : OUT STD_LOGIC;
    local_input_V_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_address2 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_ce2 : OUT STD_LOGIC;
    local_input_V_q2 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_address3 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_ce3 : OUT STD_LOGIC;
    local_input_V_q3 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_1_ce0 : OUT STD_LOGIC;
    local_input_V_1_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_1_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_1_ce1 : OUT STD_LOGIC;
    local_input_V_1_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_1_address2 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_1_ce2 : OUT STD_LOGIC;
    local_input_V_1_q2 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_input_V_1_address3 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_input_V_1_ce3 : OUT STD_LOGIC;
    local_input_V_1_q3 : IN STD_LOGIC_VECTOR (9 downto 0);
    local_output_V_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_output_V_1_ce0 : OUT STD_LOGIC;
    local_output_V_1_we0 : OUT STD_LOGIC;
    local_output_V_1_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    local_output_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    local_output_V_ce0 : OUT STD_LOGIC;
    local_output_V_we0 : OUT STD_LOGIC;
    local_output_V_d0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    max_grad_V_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    max_grad_V_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sobel_filter_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln42_reg_1274 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_332_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal reg_341 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_48_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_36_reg_1327 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal empty_48_reg_1323_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_36_reg_1327_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1274_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_1_fu_418_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_1_reg_1278 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_2_fu_432_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_2_reg_1284 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_3_fu_446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_3_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_3_reg_1290_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_4_fu_460_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_4_reg_1296 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln42_5_fu_474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_5_reg_1302 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_5_reg_1302_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln1_reg_1308 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln87_fu_492_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln87_reg_1313 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln87_reg_1313_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln87_reg_1313_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_48_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_48_reg_1323_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_36_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_36_reg_1327_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln2_reg_1331 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln66_2_fu_740_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_2_reg_1342 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_output_V_addr_reg_1352 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_output_V_addr_reg_1352_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal local_output_V_addr_reg_1352_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal local_output_V_1_addr_reg_1357 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_output_V_1_addr_reg_1357_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal local_output_V_1_addr_reg_1357_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_5_fu_785_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_5_reg_1372 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_7_fu_812_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_7_reg_1392 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_8_fu_818_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_8_reg_1397 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_323_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_8_reg_1447 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_9_fu_844_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_9_reg_1452 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_fu_853_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_reg_1457 : STD_LOGIC_VECTOR (9 downto 0);
    signal gy_V_1_fu_955_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal gy_V_1_reg_1463 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_5_fu_974_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_5_reg_1469 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_fu_992_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_reg_1474 : STD_LOGIC_VECTOR (13 downto 0);
    signal pixel_val_V_12_fu_998_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_12_reg_1479 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_13_fu_1007_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal pixel_val_V_13_reg_1485 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln52_fu_1138_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln52_reg_1490 : STD_LOGIC_VECTOR (13 downto 0);
    signal gy_V_4_fu_1142_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal gy_V_4_reg_1496 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_1502 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal mag_V_fu_1199_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mag_V_reg_1512 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln7_reg_1518 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln66_4_fu_734_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln87_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_7_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_8_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_11_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_5_fu_824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln66_9_fu_829_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_12_fu_834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_13_fu_839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal px_fu_110 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_fu_632_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_px_load : STD_LOGIC_VECTOR (4 downto 0);
    signal y_fu_114 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_y_2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_118 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln42_2_fu_395_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (9 downto 0);
    signal max_grad_V_fu_122 : STD_LOGIC_VECTOR (15 downto 0);
    signal max_grad_V_2_fu_1229_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_323_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_fu_377_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln46_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_37_fu_426_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp74_not_mid1_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp74_not_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_1_fu_454_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp76_2_not_mid1_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp76_2_not_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_fu_410_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_39_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_38_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_41_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_40_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_43_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_42_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_45_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_44_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_47_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_46_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_28_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_29_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_31_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_30_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_33_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_32_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_35_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_34_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_616_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_660_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_653_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln66_fu_667_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_684_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_677_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln66_1_fu_691_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_708_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_701_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln66_2_fu_715_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln66_1_fu_695_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln66_3_fu_725_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_1_fu_728_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln66_2_fu_719_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln66_fu_671_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln87_fu_746_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln66_6_fu_758_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_3_fu_761_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_4_fu_773_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_fu_791_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln66_10_fu_796_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln66_6_fu_800_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1270_fu_862_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_1_fu_865_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal gx_V_6_fu_871_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_883_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1273_fu_890_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1347_1_fu_900_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln813_fu_907_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_3_fu_894_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pixel_val_V_2_cast9_fu_917_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp36_fu_920_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_926_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_3_fu_934_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln52_fu_879_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal gx_V_fu_911_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal gx_V_1_fu_944_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal gy_V_fu_938_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1273_1_fu_962_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1273_1_fu_970_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1_fu_980_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal gx_V_1_cast_fu_951_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_1_fu_988_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln813_2_fu_1019_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_2_fu_1030_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln62_fu_1026_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1270_1_fu_1039_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_fu_1042_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln813_3_fu_1048_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln2_fu_1067_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal gx_V_3_fu_1033_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln813_4_fu_1075_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln813_2_fu_1079_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln62_1_fu_1056_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_10_fu_1060_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_11_cast_fu_1094_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal pixel_val_V_5_cast10_fu_1091_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_fu_1098_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_1104_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_4_fu_1116_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln813_5_fu_1121_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp35_fu_1112_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gx_V_4_fu_1085_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal gx_V_5_fu_1131_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln52_1_fu_1016_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal gy_V_3_fu_1125_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gx_V_fu_1165_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_gx_V_1_fu_1170_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal abs_gy_V_fu_1180_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal abs_gy_V_1_fu_1185_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln75_fu_1176_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln813_1_fu_1195_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln813_fu_1191_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln77_fu_1205_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1649_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1014 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component sobel_filter_mux_21_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component sobel_filter_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_21_10_1_1_U5 : component sobel_filter_mux_21_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 1,
        dout_WIDTH => 10)
    port map (
        din0 => local_input_V_1_q3,
        din1 => local_input_V_q3,
        din2 => grp_fu_323_p3,
        dout => grp_fu_323_p4);

    mux_21_10_1_1_U6 : component sobel_filter_mux_21_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 1,
        dout_WIDTH => 10)
    port map (
        din0 => local_input_V_1_q0,
        din1 => local_input_V_q0,
        din2 => grp_fu_332_p3,
        dout => grp_fu_332_p4);

    mux_21_10_1_1_U7 : component sobel_filter_mux_21_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 1,
        dout_WIDTH => 10)
    port map (
        din0 => local_input_V_q2,
        din1 => local_input_V_1_q2,
        din2 => trunc_ln87_reg_1313,
        dout => pixel_val_V_9_fu_844_p4);

    mux_21_10_1_1_U8 : component sobel_filter_mux_21_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 1,
        dout_WIDTH => 10)
    port map (
        din0 => local_input_V_1_q1,
        din1 => local_input_V_q1,
        din2 => trunc_ln87_reg_1313,
        dout => pixel_val_V_fu_853_p4);

    mux_21_10_1_1_U9 : component sobel_filter_mux_21_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 1,
        dout_WIDTH => 10)
    port map (
        din0 => local_input_V_1_q2,
        din1 => local_input_V_q2,
        din2 => trunc_ln87_reg_1313_pp0_iter1_reg,
        dout => pixel_val_V_12_fu_998_p4);

    mux_21_10_1_1_U10 : component sobel_filter_mux_21_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 1,
        dout_WIDTH => 10)
    port map (
        din0 => local_input_V_q1,
        din1 => local_input_V_1_q1,
        din2 => trunc_ln87_reg_1313_pp0_iter1_reg,
        dout => pixel_val_V_13_fu_1007_p4);

    flow_control_loop_pipe_sequential_init_U : component sobel_filter_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to1 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to1 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln42_fu_389_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_118 <= add_ln42_2_fu_395_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_118 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    max_grad_V_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    max_grad_V_fu_122 <= ap_const_lv16_0;
                elsif ((ap_const_boolean_1 = ap_condition_1014)) then 
                    max_grad_V_fu_122 <= max_grad_V_2_fu_1229_p3;
                end if;
            end if; 
        end if;
    end process;

    px_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln42_fu_389_p2 = ap_const_lv1_0))) then 
                    px_fu_110 <= add_ln46_fu_632_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    px_fu_110 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    y_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln42_fu_389_p2 = ap_const_lv1_0))) then 
                    y_fu_114 <= select_ln42_1_fu_418_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    y_fu_114 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln42_reg_1274 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln42_5_reg_1302 = ap_const_lv1_0))) then
                add_ln66_2_reg_1342 <= add_ln66_2_fu_740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln42_reg_1274 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (empty_36_reg_1327 = ap_const_lv1_0) and (empty_48_reg_1323 = ap_const_lv1_0))) then
                add_ln66_5_reg_1372 <= add_ln66_5_fu_785_p2;
                add_ln66_7_reg_1392 <= add_ln66_7_fu_812_p2;
                add_ln66_8_reg_1397 <= add_ln66_8_fu_818_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (empty_36_reg_1327_pp0_iter1_reg = ap_const_lv1_0) and (empty_48_reg_1323_pp0_iter1_reg = ap_const_lv1_0))) then
                    add_ln813_reg_1474(13 downto 2) <= add_ln813_fu_992_p2(13 downto 2);
                    gy_V_1_reg_1463(14 downto 2) <= gy_V_1_fu_955_p3(14 downto 2);
                pixel_val_V_12_reg_1479 <= pixel_val_V_12_fu_998_p4;
                    r_V_5_reg_1469(11 downto 1) <= r_V_5_fu_974_p2(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_48_fu_556_p2 = ap_const_lv1_0) and (icmp_ln42_fu_389_p2 = ap_const_lv1_0))) then
                empty_36_reg_1327 <= empty_36_fu_610_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_36_reg_1327_pp0_iter1_reg <= empty_36_reg_1327;
                empty_36_reg_1327_pp0_iter2_reg <= empty_36_reg_1327_pp0_iter1_reg;
                empty_48_reg_1323_pp0_iter1_reg <= empty_48_reg_1323;
                empty_48_reg_1323_pp0_iter2_reg <= empty_48_reg_1323_pp0_iter1_reg;
                icmp_ln42_reg_1274 <= icmp_ln42_fu_389_p2;
                icmp_ln42_reg_1274_pp0_iter1_reg <= icmp_ln42_reg_1274;
                select_ln42_3_reg_1290_pp0_iter1_reg <= select_ln42_3_reg_1290;
                select_ln42_5_reg_1302_pp0_iter1_reg <= select_ln42_5_reg_1302;
                trunc_ln87_reg_1313_pp0_iter1_reg <= trunc_ln87_reg_1313;
                trunc_ln87_reg_1313_pp0_iter2_reg <= trunc_ln87_reg_1313_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln42_fu_389_p2 = ap_const_lv1_0))) then
                empty_48_reg_1323 <= empty_48_fu_556_p2;
                lshr_ln1_reg_1308 <= select_ln42_fu_410_p3(4 downto 1);
                select_ln42_1_reg_1278 <= select_ln42_1_fu_418_p3;
                select_ln42_2_reg_1284 <= select_ln42_2_fu_432_p3;
                select_ln42_3_reg_1290 <= select_ln42_3_fu_446_p3;
                select_ln42_4_reg_1296 <= select_ln42_4_fu_460_p3;
                select_ln42_5_reg_1302 <= select_ln42_5_fu_474_p3;
                trunc_ln87_reg_1313 <= trunc_ln87_fu_492_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_36_reg_1327_pp0_iter1_reg = ap_const_lv1_0) and (empty_48_reg_1323_pp0_iter1_reg = ap_const_lv1_0))) then
                    gy_V_4_reg_1496(15 downto 2) <= gy_V_4_fu_1142_p3(15 downto 2);
                tmp_3_reg_1507 <= gy_V_4_fu_1142_p3(15 downto 15);
                tmp_reg_1502 <= gx_V_5_fu_1131_p3(14 downto 14);
                    trunc_ln52_reg_1490(13 downto 2) <= trunc_ln52_fu_1138_p1(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln42_reg_1274 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                local_output_V_1_addr_reg_1357 <= zext_ln87_fu_752_p1(9 - 1 downto 0);
                local_output_V_addr_reg_1352 <= zext_ln87_fu_752_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                local_output_V_1_addr_reg_1357_pp0_iter1_reg <= local_output_V_1_addr_reg_1357;
                local_output_V_1_addr_reg_1357_pp0_iter2_reg <= local_output_V_1_addr_reg_1357_pp0_iter1_reg;
                local_output_V_addr_reg_1352_pp0_iter1_reg <= local_output_V_addr_reg_1352;
                local_output_V_addr_reg_1352_pp0_iter2_reg <= local_output_V_addr_reg_1352_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_36_fu_610_p2 = ap_const_lv1_0) and (empty_48_fu_556_p2 = ap_const_lv1_0) and (icmp_ln42_fu_389_p2 = ap_const_lv1_0))) then
                lshr_ln2_reg_1331 <= empty_fu_616_p2(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (empty_36_reg_1327_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (empty_48_reg_1323_pp0_iter2_reg = ap_const_lv1_0))) then
                    mag_V_reg_1512(15 downto 2) <= mag_V_fu_1199_p2(15 downto 2);
                trunc_ln7_reg_1518 <= add_ln77_fu_1205_p2(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln42_5_reg_1302_pp0_iter1_reg = ap_const_lv1_0) and (empty_36_reg_1327_pp0_iter1_reg = ap_const_lv1_0) and (empty_48_reg_1323_pp0_iter1_reg = ap_const_lv1_0))) then
                pixel_val_V_13_reg_1485 <= pixel_val_V_13_fu_1007_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_36_reg_1327 = ap_const_lv1_0) and (empty_48_reg_1323 = ap_const_lv1_0))) then
                pixel_val_V_8_reg_1447 <= grp_fu_323_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln42_3_reg_1290 = ap_const_lv1_0) and (empty_36_reg_1327 = ap_const_lv1_0) and (empty_48_reg_1323 = ap_const_lv1_0))) then
                pixel_val_V_9_reg_1452 <= pixel_val_V_9_fu_844_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_36_reg_1327 = ap_const_lv1_0) and (empty_48_reg_1323 = ap_const_lv1_0))) then
                pixel_val_V_reg_1457 <= pixel_val_V_fu_853_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (empty_36_reg_1327_pp0_iter1_reg = ap_const_lv1_0) and (empty_48_reg_1323_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_36_reg_1327 = ap_const_lv1_0) and (empty_48_reg_1323 = ap_const_lv1_0)))) then
                reg_341 <= grp_fu_332_p4;
            end if;
        end if;
    end process;
    gy_V_1_reg_1463(1 downto 0) <= "00";
    r_V_5_reg_1469(0) <= '0';
    add_ln813_reg_1474(1 downto 0) <= "00";
    trunc_ln52_reg_1490(1 downto 0) <= "00";
    gy_V_4_reg_1496(1 downto 0) <= "00";
    mag_V_reg_1512(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter2_stage0, ap_idle_pp0_0to1, ap_idle_pp0_1to3, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to1 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to3 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    abs_gx_V_1_fu_1170_p3 <= 
        abs_gx_V_fu_1165_p2 when (tmp_reg_1502(0) = '1') else 
        trunc_ln52_reg_1490;
    abs_gx_V_fu_1165_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(trunc_ln52_reg_1490));
    abs_gy_V_1_fu_1185_p3 <= 
        abs_gy_V_fu_1180_p2 when (tmp_3_reg_1507(0) = '1') else 
        gy_V_4_reg_1496;
    abs_gy_V_fu_1180_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(gy_V_4_reg_1496));
    add_ln42_1_fu_454_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_2) + unsigned(ap_const_lv5_2));
    add_ln42_2_fu_395_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv10_1));
    add_ln42_fu_377_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_2) + unsigned(ap_const_lv5_1));
    add_ln46_fu_632_p2 <= std_logic_vector(unsigned(select_ln42_fu_410_p3) + unsigned(ap_const_lv5_1));
    add_ln66_1_fu_728_p2 <= std_logic_vector(unsigned(sub_ln66_1_fu_695_p2) + unsigned(zext_ln66_3_fu_725_p1));
    add_ln66_2_fu_740_p2 <= std_logic_vector(unsigned(sub_ln66_2_fu_719_p2) + unsigned(zext_ln66_3_fu_725_p1));
    add_ln66_3_fu_761_p2 <= std_logic_vector(unsigned(sub_ln66_1_fu_695_p2) + unsigned(zext_ln66_6_fu_758_p1));
    add_ln66_4_fu_773_p2 <= std_logic_vector(unsigned(sub_ln66_fu_671_p2) + unsigned(zext_ln66_6_fu_758_p1));
    add_ln66_5_fu_785_p2 <= std_logic_vector(unsigned(sub_ln66_2_fu_719_p2) + unsigned(zext_ln66_6_fu_758_p1));
    add_ln66_6_fu_800_p2 <= std_logic_vector(unsigned(sub_ln66_1_fu_695_p2) + unsigned(zext_ln66_10_fu_796_p1));
    add_ln66_7_fu_812_p2 <= std_logic_vector(unsigned(sub_ln66_fu_671_p2) + unsigned(zext_ln66_10_fu_796_p1));
    add_ln66_8_fu_818_p2 <= std_logic_vector(unsigned(sub_ln66_2_fu_719_p2) + unsigned(zext_ln66_10_fu_796_p1));
    add_ln66_fu_791_p2 <= std_logic_vector(unsigned(lshr_ln2_reg_1331) + unsigned(ap_const_lv4_1));
    add_ln77_fu_1205_p2 <= std_logic_vector(unsigned(trunc_ln813_1_fu_1195_p1) + unsigned(trunc_ln813_fu_1191_p1));
    add_ln813_2_fu_1079_p2 <= std_logic_vector(unsigned(gx_V_3_fu_1033_p2) + unsigned(sext_ln813_4_fu_1075_p1));
    add_ln813_4_fu_1116_p2 <= std_logic_vector(signed(gy_V_1_reg_1463) + signed(sext_ln813_4_fu_1075_p1));
    add_ln813_fu_992_p2 <= std_logic_vector(signed(gx_V_1_cast_fu_951_p1) + signed(sext_ln813_1_fu_988_p1));
    add_ln87_fu_746_p2 <= std_logic_vector(unsigned(sub_ln66_fu_671_p2) + unsigned(zext_ln66_3_fu_725_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1014_assign_proc : process(ap_enable_reg_pp0_iter3, empty_48_reg_1323_pp0_iter2_reg, empty_36_reg_1327_pp0_iter2_reg)
    begin
                ap_condition_1014 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_36_reg_1327_pp0_iter2_reg = ap_const_lv1_0) and (empty_48_reg_1323_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln42_reg_1274)
    begin
        if (((icmp_ln42_reg_1274 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln42_reg_1274_pp0_iter1_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln42_reg_1274_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_118)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_118;
        end if; 
    end process;


    ap_sig_allocacmp_px_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, px_fu_110, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_px_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_px_load <= px_fu_110;
        end if; 
    end process;


    ap_sig_allocacmp_y_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, y_fu_114)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_y_2 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_y_2 <= y_fu_114;
        end if; 
    end process;

    cmp74_not_fu_371_p2 <= "1" when (ap_sig_allocacmp_y_2 = ap_const_lv5_0) else "0";
    cmp74_not_mid1_fu_440_p2 <= "1" when (add_ln42_fu_377_p2 = ap_const_lv5_0) else "0";
    cmp76_2_not_fu_383_p2 <= "1" when (unsigned(add_ln42_fu_377_p2) > unsigned(ap_const_lv5_1B)) else "0";
    cmp76_2_not_mid1_fu_468_p2 <= "1" when (unsigned(add_ln42_1_fu_454_p2) > unsigned(ap_const_lv5_1B)) else "0";
    empty_28_fu_562_p2 <= "1" when (select_ln42_fu_410_p3 = ap_const_lv5_1F) else "0";
    empty_29_fu_568_p2 <= "1" when (select_ln42_fu_410_p3 = ap_const_lv5_1E) else "0";
    empty_30_fu_574_p2 <= "1" when (select_ln42_fu_410_p3 = ap_const_lv5_1D) else "0";
    empty_31_fu_580_p2 <= (empty_29_fu_568_p2 or empty_28_fu_562_p2);
    empty_32_fu_586_p2 <= "1" when (select_ln42_fu_410_p3 = ap_const_lv5_1B) else "0";
    empty_33_fu_592_p2 <= (empty_31_fu_580_p2 or empty_30_fu_574_p2);
    empty_34_fu_598_p2 <= "1" when (select_ln42_fu_410_p3 = ap_const_lv5_0) else "0";
    empty_35_fu_604_p2 <= (empty_33_fu_592_p2 or empty_32_fu_586_p2);
    empty_36_fu_610_p2 <= (empty_35_fu_604_p2 or empty_34_fu_598_p2);
    empty_37_fu_426_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_2) + unsigned(ap_const_lv5_1F));
    empty_38_fu_496_p2 <= "1" when (select_ln42_1_fu_418_p3 = ap_const_lv5_1F) else "0";
    empty_39_fu_502_p2 <= "1" when (select_ln42_1_fu_418_p3 = ap_const_lv5_1E) else "0";
    empty_40_fu_508_p2 <= "1" when (select_ln42_1_fu_418_p3 = ap_const_lv5_1D) else "0";
    empty_41_fu_514_p2 <= (empty_39_fu_502_p2 or empty_38_fu_496_p2);
    empty_42_fu_520_p2 <= "1" when (select_ln42_1_fu_418_p3 = ap_const_lv5_1C) else "0";
    empty_43_fu_526_p2 <= (empty_41_fu_514_p2 or empty_40_fu_508_p2);
    empty_44_fu_532_p2 <= "1" when (select_ln42_1_fu_418_p3 = ap_const_lv5_1B) else "0";
    empty_45_fu_538_p2 <= (empty_43_fu_526_p2 or empty_42_fu_520_p2);
    empty_46_fu_544_p2 <= "1" when (select_ln42_1_fu_418_p3 = ap_const_lv5_0) else "0";
    empty_47_fu_550_p2 <= (empty_45_fu_538_p2 or empty_44_fu_532_p2);
    empty_48_fu_556_p2 <= (empty_47_fu_550_p2 or empty_46_fu_544_p2);
    empty_fu_616_p2 <= std_logic_vector(unsigned(select_ln42_fu_410_p3) + unsigned(ap_const_lv5_1F));

    grp_fu_323_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, trunc_ln87_reg_1313, trunc_ln87_reg_1313_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_323_p3 <= trunc_ln87_reg_1313_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_323_p3 <= trunc_ln87_reg_1313;
            else 
                grp_fu_323_p3 <= "X";
            end if;
        else 
            grp_fu_323_p3 <= "X";
        end if; 
    end process;


    grp_fu_332_p3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, trunc_ln87_reg_1313, trunc_ln87_reg_1313_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_332_p3 <= trunc_ln87_reg_1313_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_332_p3 <= trunc_ln87_reg_1313;
            else 
                grp_fu_332_p3 <= "X";
            end if;
        else 
            grp_fu_332_p3 <= "X";
        end if; 
    end process;

        gx_V_1_cast_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(gx_V_1_fu_944_p3),14));

    gx_V_1_fu_944_p3 <= 
        ap_const_lv13_0 when (select_ln42_3_reg_1290_pp0_iter1_reg(0) = '1') else 
        gx_V_fu_911_p2;
    gx_V_3_fu_1033_p2 <= std_logic_vector(signed(sext_ln813_2_fu_1030_p1) + signed(sext_ln62_fu_1026_p1));
    gx_V_4_fu_1085_p2 <= std_logic_vector(unsigned(add_ln813_2_fu_1079_p2) + unsigned(sext_ln62_1_fu_1056_p1));
    gx_V_5_fu_1131_p3 <= 
        gx_V_3_fu_1033_p2 when (select_ln42_5_reg_1302_pp0_iter1_reg(0) = '1') else 
        gx_V_4_fu_1085_p2;
    gx_V_6_fu_871_p3 <= (r_V_1_fu_865_p2 & ap_const_lv2_0);
    gx_V_fu_911_p2 <= std_logic_vector(signed(sext_ln813_fu_907_p1) + signed(gx_V_6_fu_871_p3));
    gy_V_1_fu_955_p3 <= 
        ap_const_lv15_0 when (select_ln42_3_reg_1290_pp0_iter1_reg(0) = '1') else 
        gy_V_fu_938_p2;
    gy_V_3_fu_1125_p2 <= std_logic_vector(signed(sext_ln813_5_fu_1121_p1) + signed(tmp35_fu_1112_p1));
    gy_V_4_fu_1142_p3 <= 
        sext_ln52_1_fu_1016_p1 when (select_ln42_5_reg_1302_pp0_iter1_reg(0) = '1') else 
        gy_V_3_fu_1125_p2;
    gy_V_fu_938_p2 <= std_logic_vector(signed(sext_ln813_3_fu_934_p1) + signed(sext_ln52_fu_879_p1));
    icmp_ln1649_fu_1224_p2 <= "1" when (signed(mag_V_reg_1512) > signed(max_grad_V_fu_122)) else "0";
    icmp_ln42_fu_389_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv10_310) else "0";
    icmp_ln46_fu_404_p2 <= "1" when (ap_sig_allocacmp_px_load = ap_const_lv5_1C) else "0";

    local_input_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln66_8_fu_779_p1, ap_block_pp0_stage0, zext_ln66_13_fu_839_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_1_address0 <= zext_ln66_13_fu_839_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_1_address0 <= zext_ln66_8_fu_779_p1(9 - 1 downto 0);
        else 
            local_input_V_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln66_11_fu_806_p1, zext_ln66_5_fu_824_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_1_address1 <= zext_ln66_5_fu_824_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_1_address1 <= zext_ln66_11_fu_806_p1(9 - 1 downto 0);
        else 
            local_input_V_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_1_address2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, zext_ln66_4_fu_734_p1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln66_9_fu_829_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_1_address2 <= zext_ln66_9_fu_829_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_1_address2 <= zext_ln66_4_fu_734_p1(9 - 1 downto 0);
        else 
            local_input_V_1_address2 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_1_address3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln66_7_fu_767_p1, ap_block_pp0_stage0, zext_ln66_12_fu_834_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_1_address3 <= zext_ln66_12_fu_834_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_1_address3 <= zext_ln66_7_fu_767_p1(9 - 1 downto 0);
        else 
            local_input_V_1_address3 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_1_ce0 <= ap_const_logic_1;
        else 
            local_input_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_1_ce1 <= ap_const_logic_1;
        else 
            local_input_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_1_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_1_ce2 <= ap_const_logic_1;
        else 
            local_input_V_1_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_1_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_1_ce3 <= ap_const_logic_1;
        else 
            local_input_V_1_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln66_8_fu_779_p1, ap_block_pp0_stage0, zext_ln66_13_fu_839_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_address0 <= zext_ln66_13_fu_839_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_address0 <= zext_ln66_8_fu_779_p1(9 - 1 downto 0);
        else 
            local_input_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln66_11_fu_806_p1, zext_ln66_5_fu_824_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_address1 <= zext_ln66_5_fu_824_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_address1 <= zext_ln66_11_fu_806_p1(9 - 1 downto 0);
        else 
            local_input_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_address2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, zext_ln66_4_fu_734_p1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln66_9_fu_829_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_address2 <= zext_ln66_9_fu_829_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_address2 <= zext_ln66_4_fu_734_p1(9 - 1 downto 0);
        else 
            local_input_V_address2 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_address3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln66_7_fu_767_p1, ap_block_pp0_stage0, zext_ln66_12_fu_834_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_input_V_address3 <= zext_ln66_12_fu_834_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_input_V_address3 <= zext_ln66_7_fu_767_p1(9 - 1 downto 0);
        else 
            local_input_V_address3 <= "XXXXXXXXX";
        end if; 
    end process;


    local_input_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_ce0 <= ap_const_logic_1;
        else 
            local_input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_ce1 <= ap_const_logic_1;
        else 
            local_input_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_ce2 <= ap_const_logic_1;
        else 
            local_input_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    local_input_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_input_V_ce3 <= ap_const_logic_1;
        else 
            local_input_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    local_output_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, local_output_V_1_addr_reg_1357_pp0_iter2_reg, ap_block_pp0_stage1, zext_ln87_fu_752_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_output_V_1_address0 <= local_output_V_1_addr_reg_1357_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_output_V_1_address0 <= zext_ln87_fu_752_p1(9 - 1 downto 0);
        else 
            local_output_V_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_output_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_output_V_1_ce0 <= ap_const_logic_1;
        else 
            local_output_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_output_V_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, trunc_ln7_reg_1518, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_output_V_1_d0 <= trunc_ln7_reg_1518;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_output_V_1_d0 <= ap_const_lv10_0;
        else 
            local_output_V_1_d0 <= "XXXXXXXXXX";
        end if; 
    end process;


    local_output_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, icmp_ln42_reg_1274, ap_block_pp0_stage0_11001, empty_48_reg_1323, empty_36_reg_1327, ap_block_pp0_stage1_11001, trunc_ln87_reg_1313, trunc_ln87_reg_1313_pp0_iter2_reg, empty_48_reg_1323_pp0_iter2_reg, empty_36_reg_1327_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((icmp_ln42_reg_1274 = ap_const_lv1_0) and (trunc_ln87_reg_1313 = ap_const_lv1_1) and (empty_48_reg_1323 = ap_const_lv1_1)) or ((icmp_ln42_reg_1274 = ap_const_lv1_0) and (trunc_ln87_reg_1313 = ap_const_lv1_1) and (empty_36_reg_1327 = ap_const_lv1_1)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_36_reg_1327_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_48_reg_1323_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln87_reg_1313_pp0_iter2_reg = ap_const_lv1_1)))) then 
            local_output_V_1_we0 <= ap_const_logic_1;
        else 
            local_output_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    local_output_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, local_output_V_addr_reg_1352_pp0_iter2_reg, ap_block_pp0_stage1, zext_ln87_fu_752_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_output_V_address0 <= local_output_V_addr_reg_1352_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_output_V_address0 <= zext_ln87_fu_752_p1(9 - 1 downto 0);
        else 
            local_output_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_output_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            local_output_V_ce0 <= ap_const_logic_1;
        else 
            local_output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_output_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, trunc_ln7_reg_1518, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_output_V_d0 <= trunc_ln7_reg_1518;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            local_output_V_d0 <= ap_const_lv10_0;
        else 
            local_output_V_d0 <= "XXXXXXXXXX";
        end if; 
    end process;


    local_output_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, icmp_ln42_reg_1274, ap_block_pp0_stage0_11001, empty_48_reg_1323, empty_36_reg_1327, ap_block_pp0_stage1_11001, trunc_ln87_reg_1313, trunc_ln87_reg_1313_pp0_iter2_reg, empty_48_reg_1323_pp0_iter2_reg, empty_36_reg_1327_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((icmp_ln42_reg_1274 = ap_const_lv1_0) and (trunc_ln87_reg_1313 = ap_const_lv1_0) and (empty_48_reg_1323 = ap_const_lv1_1)) or ((icmp_ln42_reg_1274 = ap_const_lv1_0) and (trunc_ln87_reg_1313 = ap_const_lv1_0) and (empty_36_reg_1327 = ap_const_lv1_1)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (empty_36_reg_1327_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_48_reg_1323_pp0_iter2_reg = ap_const_lv1_0) and (trunc_ln87_reg_1313_pp0_iter2_reg = ap_const_lv1_0)))) then 
            local_output_V_we0 <= ap_const_logic_1;
        else 
            local_output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mag_V_fu_1199_p2 <= std_logic_vector(unsigned(abs_gy_V_1_fu_1185_p3) + unsigned(zext_ln75_fu_1176_p1));
    max_grad_V_1_out <= max_grad_V_fu_122;

    max_grad_V_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln42_reg_1274_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln42_reg_1274_pp0_iter1_reg = ap_const_lv1_1))) then 
            max_grad_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            max_grad_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    max_grad_V_2_fu_1229_p3 <= 
        mag_V_reg_1512 when (icmp_ln1649_fu_1224_p2(0) = '1') else 
        max_grad_V_fu_122;
        pixel_val_V_2_cast9_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pixel_val_V_reg_1457),12));

        pixel_val_V_5_cast10_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pixel_val_V_12_reg_1479),12));

    r_V_10_fu_1060_p3 <= (pixel_val_V_13_reg_1485 & ap_const_lv1_0);
        r_V_11_cast_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_fu_1060_p3),12));

    r_V_1_fu_865_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(sext_ln1270_fu_862_p1));
    r_V_3_fu_894_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1273_fu_890_p1));
    r_V_5_fu_974_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1273_1_fu_970_p1));
    r_V_8_fu_1042_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(sext_ln1270_1_fu_1039_p1));
    select_ln42_1_fu_418_p3 <= 
        add_ln42_fu_377_p2 when (icmp_ln46_fu_404_p2(0) = '1') else 
        ap_sig_allocacmp_y_2;
    select_ln42_2_fu_432_p3 <= 
        ap_sig_allocacmp_y_2 when (icmp_ln46_fu_404_p2(0) = '1') else 
        empty_37_fu_426_p2;
    select_ln42_3_fu_446_p3 <= 
        cmp74_not_mid1_fu_440_p2 when (icmp_ln46_fu_404_p2(0) = '1') else 
        cmp74_not_fu_371_p2;
    select_ln42_4_fu_460_p3 <= 
        add_ln42_1_fu_454_p2 when (icmp_ln46_fu_404_p2(0) = '1') else 
        add_ln42_fu_377_p2;
    select_ln42_5_fu_474_p3 <= 
        cmp76_2_not_mid1_fu_468_p2 when (icmp_ln46_fu_404_p2(0) = '1') else 
        cmp76_2_not_fu_383_p2;
    select_ln42_fu_410_p3 <= 
        ap_const_lv5_0 when (icmp_ln46_fu_404_p2(0) = '1') else 
        ap_sig_allocacmp_px_load;
        sext_ln1270_1_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pixel_val_V_12_reg_1479),11));

        sext_ln1270_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pixel_val_V_8_reg_1447),11));

        sext_ln1273_1_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1273_1_fu_962_p3),12));

        sext_ln1273_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_883_p3),12));

        sext_ln52_1_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(gy_V_1_reg_1463),16));

        sext_ln52_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(gx_V_6_fu_871_p3),15));

        sext_ln62_1_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln813_3_fu_1048_p3),15));

        sext_ln62_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln813_2_fu_1019_p3),15));

        sext_ln813_1_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_980_p3),14));

        sext_ln813_2_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_reg_1474),15));

        sext_ln813_3_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_926_p3),15));

        sext_ln813_4_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_1067_p3),15));

        sext_ln813_5_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_4_fu_1116_p2),16));

        sext_ln813_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1347_1_fu_900_p3),13));

    shl_ln1273_1_fu_962_p3 <= (reg_341 & ap_const_lv1_0);
    shl_ln1347_1_fu_900_p3 <= (pixel_val_V_reg_1457 & ap_const_lv2_0);
    shl_ln1_fu_980_p3 <= (grp_fu_323_p4 & ap_const_lv3_0);
    shl_ln2_fu_1067_p3 <= (reg_341 & ap_const_lv2_0);
    shl_ln813_2_fu_1019_p3 <= (r_V_5_reg_1469 & ap_const_lv2_0);
    shl_ln813_3_fu_1048_p3 <= (r_V_8_fu_1042_p2 & ap_const_lv2_0);
    shl_ln_fu_883_p3 <= (pixel_val_V_9_reg_1452 & ap_const_lv1_0);
    sub_ln66_1_fu_695_p2 <= std_logic_vector(unsigned(tmp_7_fu_677_p3) - unsigned(zext_ln66_1_fu_691_p1));
    sub_ln66_2_fu_719_p2 <= std_logic_vector(unsigned(tmp_9_fu_701_p3) - unsigned(zext_ln66_2_fu_715_p1));
    sub_ln66_fu_671_p2 <= std_logic_vector(unsigned(tmp_5_fu_653_p3) - unsigned(zext_ln66_fu_667_p1));
        tmp35_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_1104_p3),16));

    tmp36_fu_920_p2 <= std_logic_vector(unsigned(r_V_3_fu_894_p2) - unsigned(pixel_val_V_2_cast9_fu_917_p1));
    tmp4_fu_1098_p2 <= std_logic_vector(signed(r_V_11_cast_fu_1094_p1) + signed(pixel_val_V_5_cast10_fu_1091_p1));
    tmp_1_fu_926_p3 <= (tmp36_fu_920_p2 & ap_const_lv2_0);
    tmp_2_fu_1104_p3 <= (tmp4_fu_1098_p2 & ap_const_lv2_0);
    tmp_5_fu_653_p3 <= (select_ln42_1_reg_1278 & ap_const_lv4_0);
    tmp_6_fu_660_p3 <= (select_ln42_1_reg_1278 & ap_const_lv1_0);
    tmp_7_fu_677_p3 <= (select_ln42_2_reg_1284 & ap_const_lv4_0);
    tmp_8_fu_684_p3 <= (select_ln42_2_reg_1284 & ap_const_lv1_0);
    tmp_9_fu_701_p3 <= (select_ln42_4_reg_1296 & ap_const_lv4_0);
    tmp_s_fu_708_p3 <= (select_ln42_4_reg_1296 & ap_const_lv1_0);
    trunc_ln52_fu_1138_p1 <= gx_V_5_fu_1131_p3(14 - 1 downto 0);
    trunc_ln813_1_fu_1195_p1 <= abs_gy_V_1_fu_1185_p3(12 - 1 downto 0);
    trunc_ln813_fu_1191_p1 <= abs_gx_V_1_fu_1170_p3(12 - 1 downto 0);
    trunc_ln87_fu_492_p1 <= select_ln42_fu_410_p3(1 - 1 downto 0);
    zext_ln66_10_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_791_p2),9));
    zext_ln66_11_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_6_fu_800_p2),64));
    zext_ln66_12_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_7_reg_1392),64));
    zext_ln66_13_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_8_reg_1397),64));
    zext_ln66_1_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_684_p3),9));
    zext_ln66_2_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_708_p3),9));
    zext_ln66_3_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_1308),9));
    zext_ln66_4_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_1_fu_728_p2),64));
    zext_ln66_5_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_2_reg_1342),64));
    zext_ln66_6_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_reg_1331),9));
    zext_ln66_7_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_3_fu_761_p2),64));
    zext_ln66_8_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_4_fu_773_p2),64));
    zext_ln66_9_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_5_reg_1372),64));
    zext_ln66_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_660_p3),9));
    zext_ln75_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(abs_gx_V_1_fu_1170_p3),16));
    zext_ln87_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln87_fu_746_p2),64));
end behav;
