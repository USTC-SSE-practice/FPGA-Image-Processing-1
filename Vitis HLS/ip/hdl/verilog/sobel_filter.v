// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_filter_sobel_filter,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=3189,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=4016,HLS_SYN_LUT=7833,HLS_VERSION=2022_2}" *)

module sobel_filter (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        s_axi_control_r_AWVALID,
        s_axi_control_r_AWREADY,
        s_axi_control_r_AWADDR,
        s_axi_control_r_WVALID,
        s_axi_control_r_WREADY,
        s_axi_control_r_WDATA,
        s_axi_control_r_WSTRB,
        s_axi_control_r_ARVALID,
        s_axi_control_r_ARREADY,
        s_axi_control_r_ARADDR,
        s_axi_control_r_RVALID,
        s_axi_control_r_RREADY,
        s_axi_control_r_RDATA,
        s_axi_control_r_RRESP,
        s_axi_control_r_BVALID,
        s_axi_control_r_BREADY,
        s_axi_control_r_BRESP
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_R_ADDR_WIDTH = 6;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
input   s_axi_control_r_AWVALID;
output   s_axi_control_r_AWREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_AWADDR;
input   s_axi_control_r_WVALID;
output   s_axi_control_r_WREADY;
input  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_WDATA;
input  [C_S_AXI_CONTROL_R_WSTRB_WIDTH - 1:0] s_axi_control_r_WSTRB;
input   s_axi_control_r_ARVALID;
output   s_axi_control_r_ARREADY;
input  [C_S_AXI_CONTROL_R_ADDR_WIDTH - 1:0] s_axi_control_r_ARADDR;
output   s_axi_control_r_RVALID;
input   s_axi_control_r_RREADY;
output  [C_S_AXI_CONTROL_R_DATA_WIDTH - 1:0] s_axi_control_r_RDATA;
output  [1:0] s_axi_control_r_RRESP;
output   s_axi_control_r_BVALID;
input   s_axi_control_r_BREADY;
output  [1:0] s_axi_control_r_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] input_image;
wire   [63:0] output_image;
wire   [7:0] threshold;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state2;
reg   [7:0] threshold_read_reg_201;
reg   [63:0] output_image_read_reg_207;
reg   [62:0] trunc_ln_reg_218;
wire   [0:0] cmp_i_i108_fu_180_p2;
reg   [0:0] cmp_i_i108_reg_232;
wire    ap_CS_fsm_state13;
wire   [0:0] cmp_i_i_fu_187_p2;
reg   [0:0] cmp_i_i_reg_237;
wire   [9:0] shl_i_i_i_fu_193_p3;
reg   [9:0] shl_i_i_i_reg_242;
reg   [8:0] local_input_V_address0;
reg    local_input_V_ce0;
reg    local_input_V_we0;
wire   [9:0] local_input_V_q0;
reg    local_input_V_ce1;
wire   [9:0] local_input_V_q1;
reg    local_input_V_ce2;
wire   [9:0] local_input_V_q2;
reg    local_input_V_ce3;
wire   [9:0] local_input_V_q3;
reg   [8:0] local_input_V_1_address0;
reg    local_input_V_1_ce0;
reg    local_input_V_1_we0;
wire   [9:0] local_input_V_1_q0;
reg    local_input_V_1_ce1;
wire   [9:0] local_input_V_1_q1;
reg    local_input_V_1_ce2;
wire   [9:0] local_input_V_1_q2;
reg    local_input_V_1_ce3;
wire   [9:0] local_input_V_1_q3;
reg   [8:0] local_output_V_address0;
reg    local_output_V_ce0;
reg    local_output_V_we0;
wire   [9:0] local_output_V_q0;
reg   [8:0] local_output_V_1_address0;
reg    local_output_V_1_ce0;
reg    local_output_V_1_we0;
wire   [9:0] local_output_V_1_q0;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_done;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_idle;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_ready;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWVALID;
wire   [63:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWADDR;
wire   [0:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWID;
wire   [31:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWLEN;
wire   [2:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWBURST;
wire   [1:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWPROT;
wire   [3:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWQOS;
wire   [3:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWREGION;
wire   [0:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWUSER;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WVALID;
wire   [15:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WDATA;
wire   [1:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WSTRB;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WLAST;
wire   [0:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WID;
wire   [0:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WUSER;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARVALID;
wire   [63:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARADDR;
wire   [0:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARID;
wire   [31:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARLEN;
wire   [2:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARBURST;
wire   [1:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARPROT;
wire   [3:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARQOS;
wire   [3:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARREGION;
wire   [0:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARUSER;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_RREADY;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_BREADY;
wire   [8:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_address0;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_ce0;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_we0;
wire   [9:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_d0;
wire   [8:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_address0;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_ce0;
wire    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_we0;
wire   [9:0] grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_d0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_done;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_idle;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_ready;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce0;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address1;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce1;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address2;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce2;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address3;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce3;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce0;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address1;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce1;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address2;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce2;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address3;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce3;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_address0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_ce0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_we0;
wire   [9:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_d0;
wire   [8:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_address0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_ce0;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_we0;
wire   [9:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_d0;
wire   [15:0] grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_max_grad_V_1_out;
wire    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_max_grad_V_1_out_ap_vld;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_done;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_idle;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_ready;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWVALID;
wire   [63:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWADDR;
wire   [0:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWID;
wire   [31:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWLEN;
wire   [2:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWSIZE;
wire   [1:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWBURST;
wire   [1:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWLOCK;
wire   [3:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWCACHE;
wire   [2:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWPROT;
wire   [3:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWQOS;
wire   [3:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWREGION;
wire   [0:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWUSER;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WVALID;
wire   [15:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WDATA;
wire   [1:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WSTRB;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WLAST;
wire   [0:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WID;
wire   [0:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WUSER;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARVALID;
wire   [63:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARADDR;
wire   [0:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARID;
wire   [31:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARLEN;
wire   [2:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARSIZE;
wire   [1:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARBURST;
wire   [1:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARLOCK;
wire   [3:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARCACHE;
wire   [2:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARPROT;
wire   [3:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARQOS;
wire   [3:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARREGION;
wire   [0:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARUSER;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_RREADY;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_BREADY;
wire   [8:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_address0;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_ce0;
wire   [8:0] grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_1_address0;
wire    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_1_ce0;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
reg   [31:0] gmem0_ARLEN;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [15:0] gmem0_RDATA;
wire   [11:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [15:0] gmem1_RDATA;
wire   [9:0] gmem1_RFIFONUM;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
reg    grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start_reg;
wire    ap_CS_fsm_state14;
wire  signed [63:0] sext_ln30_fu_166_p1;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start_reg = 1'b0;
#0 grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start_reg = 1'b0;
#0 grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start_reg = 1'b0;
end

sobel_filter_local_input_V_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 392 ),
    .AddressWidth( 9 ))
local_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_input_V_address0),
    .ce0(local_input_V_ce0),
    .we0(local_input_V_we0),
    .d0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_d0),
    .q0(local_input_V_q0),
    .address1(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address1),
    .ce1(local_input_V_ce1),
    .q1(local_input_V_q1),
    .address2(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address2),
    .ce2(local_input_V_ce2),
    .q2(local_input_V_q2),
    .address3(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address3),
    .ce3(local_input_V_ce3),
    .q3(local_input_V_q3)
);

sobel_filter_local_input_V_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 392 ),
    .AddressWidth( 9 ))
local_input_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_input_V_1_address0),
    .ce0(local_input_V_1_ce0),
    .we0(local_input_V_1_we0),
    .d0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_d0),
    .q0(local_input_V_1_q0),
    .address1(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address1),
    .ce1(local_input_V_1_ce1),
    .q1(local_input_V_1_q1),
    .address2(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address2),
    .ce2(local_input_V_1_ce2),
    .q2(local_input_V_1_q2),
    .address3(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address3),
    .ce3(local_input_V_1_ce3),
    .q3(local_input_V_1_q3)
);

sobel_filter_local_output_V_RAM_AUTO_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 392 ),
    .AddressWidth( 9 ))
local_output_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_output_V_address0),
    .ce0(local_output_V_ce0),
    .we0(local_output_V_we0),
    .d0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_d0),
    .q0(local_output_V_q0)
);

sobel_filter_local_output_V_RAM_AUTO_1R1W #(
    .DataWidth( 10 ),
    .AddressRange( 392 ),
    .AddressWidth( 9 ))
local_output_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_output_V_1_address0),
    .ce0(local_output_V_1_ce0),
    .we0(local_output_V_1_we0),
    .d0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_d0),
    .q0(local_output_V_1_q0)
);

sobel_filter_sobel_filter_Pipeline_COPY_INPUT grp_sobel_filter_Pipeline_COPY_INPUT_fu_125(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start),
    .ap_done(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_done),
    .ap_idle(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_idle),
    .ap_ready(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_ready),
    .m_axi_gmem0_AWVALID(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(gmem0_RDATA),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .sext_ln30(trunc_ln_reg_218),
    .local_input_V_1_address0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_address0),
    .local_input_V_1_ce0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_ce0),
    .local_input_V_1_we0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_we0),
    .local_input_V_1_d0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_d0),
    .local_input_V_address0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_address0),
    .local_input_V_ce0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_ce0),
    .local_input_V_we0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_we0),
    .local_input_V_d0(grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_d0)
);

sobel_filter_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start),
    .ap_done(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_done),
    .ap_idle(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_idle),
    .ap_ready(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_ready),
    .local_input_V_address0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address0),
    .local_input_V_ce0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce0),
    .local_input_V_q0(local_input_V_q0),
    .local_input_V_address1(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address1),
    .local_input_V_ce1(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce1),
    .local_input_V_q1(local_input_V_q1),
    .local_input_V_address2(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address2),
    .local_input_V_ce2(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce2),
    .local_input_V_q2(local_input_V_q2),
    .local_input_V_address3(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address3),
    .local_input_V_ce3(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce3),
    .local_input_V_q3(local_input_V_q3),
    .local_input_V_1_address0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address0),
    .local_input_V_1_ce0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce0),
    .local_input_V_1_q0(local_input_V_1_q0),
    .local_input_V_1_address1(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address1),
    .local_input_V_1_ce1(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce1),
    .local_input_V_1_q1(local_input_V_1_q1),
    .local_input_V_1_address2(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address2),
    .local_input_V_1_ce2(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce2),
    .local_input_V_1_q2(local_input_V_1_q2),
    .local_input_V_1_address3(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address3),
    .local_input_V_1_ce3(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce3),
    .local_input_V_1_q3(local_input_V_1_q3),
    .local_output_V_1_address0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_address0),
    .local_output_V_1_ce0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_ce0),
    .local_output_V_1_we0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_we0),
    .local_output_V_1_d0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_d0),
    .local_output_V_address0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_address0),
    .local_output_V_ce0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_ce0),
    .local_output_V_we0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_we0),
    .local_output_V_d0(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_d0),
    .max_grad_V_1_out(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_max_grad_V_1_out),
    .max_grad_V_1_out_ap_vld(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_max_grad_V_1_out_ap_vld)
);

sobel_filter_sobel_filter_Pipeline_NORM_LOOP grp_sobel_filter_Pipeline_NORM_LOOP_fu_143(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start),
    .ap_done(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_done),
    .ap_idle(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_idle),
    .ap_ready(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_ready),
    .m_axi_gmem1_AWVALID(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWVALID),
    .m_axi_gmem1_AWREADY(gmem1_AWREADY),
    .m_axi_gmem1_AWADDR(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWADDR),
    .m_axi_gmem1_AWID(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWID),
    .m_axi_gmem1_AWLEN(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWLEN),
    .m_axi_gmem1_AWSIZE(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWSIZE),
    .m_axi_gmem1_AWBURST(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWBURST),
    .m_axi_gmem1_AWLOCK(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWLOCK),
    .m_axi_gmem1_AWCACHE(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWCACHE),
    .m_axi_gmem1_AWPROT(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWPROT),
    .m_axi_gmem1_AWQOS(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWQOS),
    .m_axi_gmem1_AWREGION(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWREGION),
    .m_axi_gmem1_AWUSER(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWUSER),
    .m_axi_gmem1_WVALID(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WVALID),
    .m_axi_gmem1_WREADY(gmem1_WREADY),
    .m_axi_gmem1_WDATA(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WDATA),
    .m_axi_gmem1_WSTRB(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WSTRB),
    .m_axi_gmem1_WLAST(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WLAST),
    .m_axi_gmem1_WID(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WID),
    .m_axi_gmem1_WUSER(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WUSER),
    .m_axi_gmem1_ARVALID(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARVALID),
    .m_axi_gmem1_ARREADY(1'b0),
    .m_axi_gmem1_ARADDR(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARADDR),
    .m_axi_gmem1_ARID(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARID),
    .m_axi_gmem1_ARLEN(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARLEN),
    .m_axi_gmem1_ARSIZE(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARSIZE),
    .m_axi_gmem1_ARBURST(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARBURST),
    .m_axi_gmem1_ARLOCK(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARLOCK),
    .m_axi_gmem1_ARCACHE(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARCACHE),
    .m_axi_gmem1_ARPROT(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARPROT),
    .m_axi_gmem1_ARQOS(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARQOS),
    .m_axi_gmem1_ARREGION(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARREGION),
    .m_axi_gmem1_ARUSER(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_ARUSER),
    .m_axi_gmem1_RVALID(1'b0),
    .m_axi_gmem1_RREADY(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_RREADY),
    .m_axi_gmem1_RDATA(16'd0),
    .m_axi_gmem1_RLAST(1'b0),
    .m_axi_gmem1_RID(1'd0),
    .m_axi_gmem1_RFIFONUM(10'd0),
    .m_axi_gmem1_RUSER(1'd0),
    .m_axi_gmem1_RRESP(2'd0),
    .m_axi_gmem1_BVALID(gmem1_BVALID),
    .m_axi_gmem1_BREADY(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_BREADY),
    .m_axi_gmem1_BRESP(2'd0),
    .m_axi_gmem1_BID(1'd0),
    .m_axi_gmem1_BUSER(1'd0),
    .output_image(output_image_read_reg_207),
    .cmp_i_i108(cmp_i_i108_reg_232),
    .local_output_V_address0(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_address0),
    .local_output_V_ce0(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_ce0),
    .local_output_V_q0(local_output_V_q0),
    .local_output_V_1_address0(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_1_address0),
    .local_output_V_1_ce0(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_1_ce0),
    .local_output_V_1_q0(local_output_V_1_q0),
    .zext_ln94(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_max_grad_V_1_out),
    .shl_i_i_i(shl_i_i_i_reg_242),
    .cmp_i_i(cmp_i_i_reg_237)
);

sobel_filter_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .threshold(threshold),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

sobel_filter_control_r_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_R_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_R_DATA_WIDTH ))
control_r_s_axi_U(
    .AWVALID(s_axi_control_r_AWVALID),
    .AWREADY(s_axi_control_r_AWREADY),
    .AWADDR(s_axi_control_r_AWADDR),
    .WVALID(s_axi_control_r_WVALID),
    .WREADY(s_axi_control_r_WREADY),
    .WDATA(s_axi_control_r_WDATA),
    .WSTRB(s_axi_control_r_WSTRB),
    .ARVALID(s_axi_control_r_ARVALID),
    .ARREADY(s_axi_control_r_ARREADY),
    .ARADDR(s_axi_control_r_ARADDR),
    .RVALID(s_axi_control_r_RVALID),
    .RREADY(s_axi_control_r_RREADY),
    .RDATA(s_axi_control_r_RDATA),
    .RRESP(s_axi_control_r_RRESP),
    .BVALID(s_axi_control_r_BVALID),
    .BREADY(s_axi_control_r_BREADY),
    .BRESP(s_axi_control_r_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_image(input_image),
    .output_image(output_image)
);

sobel_filter_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 12 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARLEN(gmem0_ARLEN),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0)
);

sobel_filter_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 10 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RFIFONUM(gmem1_RFIFONUM),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWADDR),
    .I_AWLEN(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWLEN),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WDATA),
    .I_WSTRB(grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WSTRB),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_ready == 1'b1)) begin
            grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_ready == 1'b1)) begin
            grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_ready == 1'b1)) begin
            grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        cmp_i_i108_reg_232 <= cmp_i_i108_fu_180_p2;
        cmp_i_i_reg_237 <= cmp_i_i_fu_187_p2;
        shl_i_i_i_reg_242[9 : 2] <= shl_i_i_i_fu_193_p3[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        output_image_read_reg_207 <= output_image;
        threshold_read_reg_201 <= threshold;
        trunc_ln_reg_218 <= {{input_image[63:1]}};
    end
end

always @ (*) begin
    if ((grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_ARREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_ARADDR = sext_ln30_fu_166_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        gmem0_ARADDR = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARADDR;
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_ARLEN = 32'd784;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        gmem0_ARLEN = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARLEN;
    end else begin
        gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem0_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        gmem0_ARVALID = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_ARVALID;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        gmem0_RREADY = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_m_axi_gmem0_RREADY;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        gmem1_AWVALID = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_AWVALID;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        gmem1_BREADY = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_BREADY;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        gmem1_WVALID = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_m_axi_gmem1_WVALID;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_1_address0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_input_V_1_address0 = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_address0;
    end else begin
        local_input_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_1_ce0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_input_V_1_ce0 = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_ce0;
    end else begin
        local_input_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_1_ce1 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce1;
    end else begin
        local_input_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_1_ce2 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce2;
    end else begin
        local_input_V_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_1_ce3 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_1_ce3;
    end else begin
        local_input_V_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        local_input_V_1_we0 = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_1_we0;
    end else begin
        local_input_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_address0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_input_V_address0 = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_address0;
    end else begin
        local_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_ce0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        local_input_V_ce0 = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_ce0;
    end else begin
        local_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_ce1 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce1;
    end else begin
        local_input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_ce2 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce2;
    end else begin
        local_input_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_input_V_ce3 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_input_V_ce3;
    end else begin
        local_input_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        local_input_V_we0 = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_local_input_V_we0;
    end else begin
        local_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_output_V_1_address0 = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_output_V_1_address0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_address0;
    end else begin
        local_output_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_output_V_1_ce0 = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_output_V_1_ce0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_ce0;
    end else begin
        local_output_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_output_V_1_we0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_1_we0;
    end else begin
        local_output_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_output_V_address0 = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_output_V_address0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_address0;
    end else begin
        local_output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        local_output_V_ce0 = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_local_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_output_V_ce0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_ce0;
    end else begin
        local_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        local_output_V_we0 = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_local_output_V_we0;
    end else begin
        local_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp_i_i108_fu_180_p2 = (($signed(grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_max_grad_V_1_out) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign cmp_i_i_fu_187_p2 = (($signed(threshold_read_reg_201) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start = grp_sobel_filter_Pipeline_COPY_INPUT_fu_125_ap_start_reg;

assign grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start = grp_sobel_filter_Pipeline_NORM_LOOP_fu_143_ap_start_reg;

assign grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start = grp_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP_fu_134_ap_start_reg;

assign sext_ln30_fu_166_p1 = $signed(trunc_ln_reg_218);

assign shl_i_i_i_fu_193_p3 = {{threshold_read_reg_201}, {2'd0}};

always @ (posedge ap_clk) begin
    shl_i_i_i_reg_242[1:0] <= 2'b00;
end

endmodule //sobel_filter
