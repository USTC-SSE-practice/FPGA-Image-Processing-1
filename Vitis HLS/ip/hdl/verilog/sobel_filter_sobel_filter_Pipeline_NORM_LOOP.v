// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sobel_filter_sobel_filter_Pipeline_NORM_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        output_image,
        cmp_i_i108,
        local_output_V_address0,
        local_output_V_ce0,
        local_output_V_q0,
        local_output_V_1_address0,
        local_output_V_1_ce0,
        local_output_V_1_q0,
        zext_ln94,
        shl_i_i_i,
        cmp_i_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [15:0] m_axi_gmem1_WDATA;
output  [1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [15:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [9:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [63:0] output_image;
input  [0:0] cmp_i_i108;
output  [8:0] local_output_V_address0;
output   local_output_V_ce0;
input  [9:0] local_output_V_q0;
output  [8:0] local_output_V_1_address0;
output   local_output_V_1_ce0;
input  [9:0] local_output_V_1_q0;
input  [15:0] zext_ln94;
input  [9:0] shl_i_i_i;
input  [0:0] cmp_i_i;

reg ap_idle;
reg m_axi_gmem1_AWVALID;
reg m_axi_gmem1_WVALID;
reg m_axi_gmem1_BREADY;
reg local_output_V_ce0;
reg local_output_V_1_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
reg    ap_block_state32_pp0_stage0_iter31;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln94_fu_229_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem1_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    gmem1_blk_n_W;
reg    gmem1_blk_n_B;
wire   [0:0] cmp_i_i_read_reg_465;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] cmp_i_i108_read_reg_475;
wire   [17:0] zext_ln94_cast_fu_207_p1;
reg   [17:0] zext_ln94_cast_reg_484;
reg   [9:0] i_1_reg_489;
reg   [9:0] i_1_reg_489_pp0_iter2_reg;
reg   [9:0] i_1_reg_489_pp0_iter3_reg;
reg   [9:0] i_1_reg_489_pp0_iter4_reg;
reg   [9:0] i_1_reg_489_pp0_iter5_reg;
reg   [9:0] i_1_reg_489_pp0_iter6_reg;
reg   [9:0] i_1_reg_489_pp0_iter7_reg;
reg   [9:0] i_1_reg_489_pp0_iter8_reg;
reg   [9:0] i_1_reg_489_pp0_iter9_reg;
reg   [9:0] i_1_reg_489_pp0_iter10_reg;
reg   [9:0] i_1_reg_489_pp0_iter11_reg;
reg   [9:0] i_1_reg_489_pp0_iter12_reg;
reg   [9:0] i_1_reg_489_pp0_iter13_reg;
reg   [9:0] i_1_reg_489_pp0_iter14_reg;
reg   [9:0] i_1_reg_489_pp0_iter15_reg;
reg   [9:0] i_1_reg_489_pp0_iter16_reg;
reg   [9:0] i_1_reg_489_pp0_iter17_reg;
reg   [9:0] i_1_reg_489_pp0_iter18_reg;
reg   [9:0] i_1_reg_489_pp0_iter19_reg;
reg   [9:0] i_1_reg_489_pp0_iter20_reg;
reg   [9:0] i_1_reg_489_pp0_iter21_reg;
reg   [9:0] i_1_reg_489_pp0_iter22_reg;
reg   [9:0] i_1_reg_489_pp0_iter23_reg;
reg   [0:0] icmp_ln94_reg_495;
reg   [0:0] icmp_ln94_reg_495_pp0_iter2_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter3_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter4_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter5_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter6_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter7_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter8_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter9_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter10_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter11_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter12_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter13_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter14_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter15_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter16_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter17_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter18_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter19_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter20_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter21_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter22_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter23_reg;
reg   [0:0] icmp_ln94_reg_495_pp0_iter24_reg;
wire   [9:0] tmp_1_fu_356_p4;
reg   [9:0] tmp_1_reg_509;
reg   [63:0] gmem1_addr_reg_519;
wire   [9:0] select_ln102_fu_431_p3;
reg   [9:0] select_ln102_reg_525;
wire   [9:0] ap_phi_reg_pp0_iter0_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter1_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter2_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter3_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter4_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter5_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter6_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter7_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter8_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter9_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter10_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter11_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter12_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter13_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter14_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter15_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter16_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter17_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter18_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter19_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter20_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter21_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter22_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter23_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter24_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter25_storemerge_reg_196;
reg   [9:0] ap_phi_reg_pp0_iter26_storemerge_reg_196;
wire   [63:0] zext_ln837_2_fu_309_p1;
wire  signed [63:0] sext_ln108_fu_404_p1;
reg    ap_block_pp0_stage0_01001;
reg   [9:0] col_fu_112;
wire   [9:0] select_ln108_fu_330_p3;
wire    ap_loop_init;
reg   [19:0] phi_mul20_fu_116;
wire   [19:0] next_mul21_fu_244_p2;
reg   [9:0] i_fu_120;
wire   [9:0] add_ln94_fu_235_p2;
wire   [4:0] tmp_fu_253_p4;
wire   [5:0] tmp_4_fu_271_p3;
wire   [8:0] tmp_3_fu_263_p3;
wire   [8:0] zext_ln837_fu_279_p1;
wire   [3:0] lshr_ln3_fu_289_p4;
wire   [8:0] sub_ln837_fu_283_p2;
wire   [8:0] zext_ln837_1_fu_299_p1;
wire   [8:0] add_ln837_fu_303_p2;
wire   [9:0] add_ln108_fu_318_p2;
wire   [0:0] icmp_ln108_fu_324_p2;
wire   [0:0] tmp_1_fu_356_p3;
wire   [17:0] grp_fu_373_p0;
wire   [16:0] grp_fu_373_p1;
wire   [10:0] tmp_s_fu_378_p3;
wire   [63:0] p_cast13_fu_385_p1;
wire   [63:0] empty_fu_389_p2;
wire   [62:0] trunc_ln3_fu_394_p4;
wire   [9:0] grp_fu_373_p2;
wire   [9:0] norm_val_V_fu_414_p1;
wire   [0:0] icmp_ln1649_fu_418_p2;
wire   [9:0] select_ln102_1_fu_423_p3;
reg    grp_fu_373_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_522;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U17(
    .din0(local_output_V_q0),
    .din1(local_output_V_1_q0),
    .din2(tmp_1_fu_356_p3),
    .dout(tmp_1_fu_356_p4)
);

sobel_filter_sdiv_18ns_17ns_10_22_1 #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 10 ))
sdiv_18ns_17ns_10_22_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_373_p0),
    .din1(grp_fu_373_p1),
    .ce(grp_fu_373_ce),
    .dout(grp_fu_373_p2)
);

sobel_filter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter30_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln94_reg_495_pp0_iter24_reg == 1'd0) & (cmp_i_i108 == 1'd1))) begin
            ap_phi_reg_pp0_iter26_storemerge_reg_196 <= select_ln102_reg_525;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter26_storemerge_reg_196 <= ap_phi_reg_pp0_iter25_storemerge_reg_196;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_522)) begin
        if (((cmp_i_i108_read_reg_475 == 1'd0) & (icmp_ln94_fu_229_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_storemerge_reg_196 <= 10'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_storemerge_reg_196 <= ap_phi_reg_pp0_iter1_storemerge_reg_196;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_fu_112 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln94_fu_229_p2 == 1'd0))) begin
            col_fu_112 <= select_ln108_fu_330_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_120 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln94_fu_229_p2 == 1'd0))) begin
            i_fu_120 <= add_ln94_fu_235_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul20_fu_116 <= 20'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln94_fu_229_p2 == 1'd0))) begin
            phi_mul20_fu_116 <= next_mul21_fu_244_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        i_1_reg_489_pp0_iter10_reg <= i_1_reg_489_pp0_iter9_reg;
        i_1_reg_489_pp0_iter11_reg <= i_1_reg_489_pp0_iter10_reg;
        i_1_reg_489_pp0_iter12_reg <= i_1_reg_489_pp0_iter11_reg;
        i_1_reg_489_pp0_iter13_reg <= i_1_reg_489_pp0_iter12_reg;
        i_1_reg_489_pp0_iter14_reg <= i_1_reg_489_pp0_iter13_reg;
        i_1_reg_489_pp0_iter15_reg <= i_1_reg_489_pp0_iter14_reg;
        i_1_reg_489_pp0_iter16_reg <= i_1_reg_489_pp0_iter15_reg;
        i_1_reg_489_pp0_iter17_reg <= i_1_reg_489_pp0_iter16_reg;
        i_1_reg_489_pp0_iter18_reg <= i_1_reg_489_pp0_iter17_reg;
        i_1_reg_489_pp0_iter19_reg <= i_1_reg_489_pp0_iter18_reg;
        i_1_reg_489_pp0_iter20_reg <= i_1_reg_489_pp0_iter19_reg;
        i_1_reg_489_pp0_iter21_reg <= i_1_reg_489_pp0_iter20_reg;
        i_1_reg_489_pp0_iter22_reg <= i_1_reg_489_pp0_iter21_reg;
        i_1_reg_489_pp0_iter23_reg <= i_1_reg_489_pp0_iter22_reg;
        i_1_reg_489_pp0_iter2_reg <= i_1_reg_489;
        i_1_reg_489_pp0_iter3_reg <= i_1_reg_489_pp0_iter2_reg;
        i_1_reg_489_pp0_iter4_reg <= i_1_reg_489_pp0_iter3_reg;
        i_1_reg_489_pp0_iter5_reg <= i_1_reg_489_pp0_iter4_reg;
        i_1_reg_489_pp0_iter6_reg <= i_1_reg_489_pp0_iter5_reg;
        i_1_reg_489_pp0_iter7_reg <= i_1_reg_489_pp0_iter6_reg;
        i_1_reg_489_pp0_iter8_reg <= i_1_reg_489_pp0_iter7_reg;
        i_1_reg_489_pp0_iter9_reg <= i_1_reg_489_pp0_iter8_reg;
        icmp_ln94_reg_495_pp0_iter10_reg <= icmp_ln94_reg_495_pp0_iter9_reg;
        icmp_ln94_reg_495_pp0_iter11_reg <= icmp_ln94_reg_495_pp0_iter10_reg;
        icmp_ln94_reg_495_pp0_iter12_reg <= icmp_ln94_reg_495_pp0_iter11_reg;
        icmp_ln94_reg_495_pp0_iter13_reg <= icmp_ln94_reg_495_pp0_iter12_reg;
        icmp_ln94_reg_495_pp0_iter14_reg <= icmp_ln94_reg_495_pp0_iter13_reg;
        icmp_ln94_reg_495_pp0_iter15_reg <= icmp_ln94_reg_495_pp0_iter14_reg;
        icmp_ln94_reg_495_pp0_iter16_reg <= icmp_ln94_reg_495_pp0_iter15_reg;
        icmp_ln94_reg_495_pp0_iter17_reg <= icmp_ln94_reg_495_pp0_iter16_reg;
        icmp_ln94_reg_495_pp0_iter18_reg <= icmp_ln94_reg_495_pp0_iter17_reg;
        icmp_ln94_reg_495_pp0_iter19_reg <= icmp_ln94_reg_495_pp0_iter18_reg;
        icmp_ln94_reg_495_pp0_iter20_reg <= icmp_ln94_reg_495_pp0_iter19_reg;
        icmp_ln94_reg_495_pp0_iter21_reg <= icmp_ln94_reg_495_pp0_iter20_reg;
        icmp_ln94_reg_495_pp0_iter22_reg <= icmp_ln94_reg_495_pp0_iter21_reg;
        icmp_ln94_reg_495_pp0_iter23_reg <= icmp_ln94_reg_495_pp0_iter22_reg;
        icmp_ln94_reg_495_pp0_iter24_reg <= icmp_ln94_reg_495_pp0_iter23_reg;
        icmp_ln94_reg_495_pp0_iter2_reg <= icmp_ln94_reg_495;
        icmp_ln94_reg_495_pp0_iter3_reg <= icmp_ln94_reg_495_pp0_iter2_reg;
        icmp_ln94_reg_495_pp0_iter4_reg <= icmp_ln94_reg_495_pp0_iter3_reg;
        icmp_ln94_reg_495_pp0_iter5_reg <= icmp_ln94_reg_495_pp0_iter4_reg;
        icmp_ln94_reg_495_pp0_iter6_reg <= icmp_ln94_reg_495_pp0_iter5_reg;
        icmp_ln94_reg_495_pp0_iter7_reg <= icmp_ln94_reg_495_pp0_iter6_reg;
        icmp_ln94_reg_495_pp0_iter8_reg <= icmp_ln94_reg_495_pp0_iter7_reg;
        icmp_ln94_reg_495_pp0_iter9_reg <= icmp_ln94_reg_495_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        i_1_reg_489 <= i_fu_120;
        icmp_ln94_reg_495 <= icmp_ln94_fu_229_p2;
        zext_ln94_cast_reg_484[15 : 0] <= zext_ln94_cast_fu_207_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_storemerge_reg_196 <= ap_phi_reg_pp0_iter9_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter11_storemerge_reg_196 <= ap_phi_reg_pp0_iter10_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter12_storemerge_reg_196 <= ap_phi_reg_pp0_iter11_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_storemerge_reg_196 <= ap_phi_reg_pp0_iter12_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_storemerge_reg_196 <= ap_phi_reg_pp0_iter13_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_storemerge_reg_196 <= ap_phi_reg_pp0_iter14_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_storemerge_reg_196 <= ap_phi_reg_pp0_iter15_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_storemerge_reg_196 <= ap_phi_reg_pp0_iter16_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_storemerge_reg_196 <= ap_phi_reg_pp0_iter17_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_storemerge_reg_196 <= ap_phi_reg_pp0_iter18_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_storemerge_reg_196 <= ap_phi_reg_pp0_iter0_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_storemerge_reg_196 <= ap_phi_reg_pp0_iter19_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_storemerge_reg_196 <= ap_phi_reg_pp0_iter20_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_storemerge_reg_196 <= ap_phi_reg_pp0_iter21_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_storemerge_reg_196 <= ap_phi_reg_pp0_iter22_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_storemerge_reg_196 <= ap_phi_reg_pp0_iter23_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_storemerge_reg_196 <= ap_phi_reg_pp0_iter24_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_storemerge_reg_196 <= ap_phi_reg_pp0_iter2_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_storemerge_reg_196 <= ap_phi_reg_pp0_iter3_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_storemerge_reg_196 <= ap_phi_reg_pp0_iter4_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_storemerge_reg_196 <= ap_phi_reg_pp0_iter5_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_storemerge_reg_196 <= ap_phi_reg_pp0_iter6_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_storemerge_reg_196 <= ap_phi_reg_pp0_iter7_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_storemerge_reg_196 <= ap_phi_reg_pp0_iter8_storemerge_reg_196;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_reg_495_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem1_addr_reg_519 <= sext_ln108_fu_404_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_reg_495_pp0_iter23_reg == 1'd0) & (cmp_i_i108 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln102_reg_525 <= select_ln102_fu_431_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_reg_495 == 1'd0) & (cmp_i_i108 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_509 <= tmp_1_fu_356_p4;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln94_fu_229_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter30_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_373_ce = 1'b1;
    end else begin
        grp_fu_373_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_output_V_1_ce0 = 1'b1;
    end else begin
        local_output_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_output_V_ce0 = 1'b1;
    end else begin
        local_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem1_AWVALID = 1'b1;
    end else begin
        m_axi_gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter31 == 1'b1))) begin
        m_axi_gmem1_BREADY = 1'b1;
    end else begin
        m_axi_gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem1_WVALID = 1'b1;
    end else begin
        m_axi_gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln108_fu_318_p2 = (col_fu_112 + 10'd1);

assign add_ln837_fu_303_p2 = (sub_ln837_fu_283_p2 + zext_ln837_1_fu_299_p1);

assign add_ln94_fu_235_p2 = (i_fu_120 + 10'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (m_axi_gmem1_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (m_axi_gmem1_AWREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (m_axi_gmem1_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter25 == 1'b1) & (m_axi_gmem1_AWREADY == 1'b0)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter31 = (m_axi_gmem1_BVALID == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_522 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_196 = 'bx;

assign cmp_i_i108_read_reg_475 = cmp_i_i108;

assign cmp_i_i_read_reg_465 = cmp_i_i;

assign empty_fu_389_p2 = (p_cast13_fu_385_p1 + output_image);

assign grp_fu_373_p0 = {{tmp_1_reg_509}, {8'd0}};

assign grp_fu_373_p1 = zext_ln94_cast_reg_484;

assign icmp_ln108_fu_324_p2 = ((add_ln108_fu_318_p2 < 10'd28) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_418_p2 = (($signed(norm_val_V_fu_414_p1) > $signed(shl_i_i_i)) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_229_p2 = ((i_fu_120 == 10'd784) ? 1'b1 : 1'b0);

assign local_output_V_1_address0 = zext_ln837_2_fu_309_p1;

assign local_output_V_address0 = zext_ln837_2_fu_309_p1;

assign lshr_ln3_fu_289_p4 = {{col_fu_112[4:1]}};

assign m_axi_gmem1_ARADDR = 64'd0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_ARVALID = 1'b0;

assign m_axi_gmem1_AWADDR = gmem1_addr_reg_519;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd1;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_RREADY = 1'b0;

assign m_axi_gmem1_WDATA = ap_phi_reg_pp0_iter26_storemerge_reg_196;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 2'd3;

assign m_axi_gmem1_WUSER = 1'd0;

assign next_mul21_fu_244_p2 = (phi_mul20_fu_116 + 20'd1171);

assign norm_val_V_fu_414_p1 = grp_fu_373_p2[9:0];

assign p_cast13_fu_385_p1 = tmp_s_fu_378_p3;

assign select_ln102_1_fu_423_p3 = ((icmp_ln1649_fu_418_p2[0:0] == 1'b1) ? 10'd64 : 10'd0);

assign select_ln102_fu_431_p3 = ((cmp_i_i[0:0] == 1'b1) ? select_ln102_1_fu_423_p3 : norm_val_V_fu_414_p1);

assign select_ln108_fu_330_p3 = ((icmp_ln108_fu_324_p2[0:0] == 1'b1) ? add_ln108_fu_318_p2 : 10'd0);

assign sext_ln108_fu_404_p1 = $signed(trunc_ln3_fu_394_p4);

assign sub_ln837_fu_283_p2 = (tmp_3_fu_263_p3 - zext_ln837_fu_279_p1);

assign tmp_1_fu_356_p3 = i_1_reg_489[0:0];

assign tmp_3_fu_263_p3 = {{tmp_fu_253_p4}, {4'd0}};

assign tmp_4_fu_271_p3 = {{tmp_fu_253_p4}, {1'd0}};

assign tmp_fu_253_p4 = {{phi_mul20_fu_116[19:15]}};

assign tmp_s_fu_378_p3 = {{i_1_reg_489_pp0_iter23_reg}, {1'd0}};

assign trunc_ln3_fu_394_p4 = {{empty_fu_389_p2[63:1]}};

assign zext_ln837_1_fu_299_p1 = lshr_ln3_fu_289_p4;

assign zext_ln837_2_fu_309_p1 = add_ln837_fu_303_p2;

assign zext_ln837_fu_279_p1 = tmp_4_fu_271_p3;

assign zext_ln94_cast_fu_207_p1 = zext_ln94;

always @ (posedge ap_clk) begin
    zext_ln94_cast_reg_484[17:16] <= 2'b00;
end

endmodule //sobel_filter_sobel_filter_Pipeline_NORM_LOOP
