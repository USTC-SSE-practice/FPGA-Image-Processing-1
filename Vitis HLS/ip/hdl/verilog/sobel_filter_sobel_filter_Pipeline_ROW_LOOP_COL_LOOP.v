// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sobel_filter_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        local_input_V_address0,
        local_input_V_ce0,
        local_input_V_q0,
        local_input_V_address1,
        local_input_V_ce1,
        local_input_V_q1,
        local_input_V_address2,
        local_input_V_ce2,
        local_input_V_q2,
        local_input_V_address3,
        local_input_V_ce3,
        local_input_V_q3,
        local_input_V_1_address0,
        local_input_V_1_ce0,
        local_input_V_1_q0,
        local_input_V_1_address1,
        local_input_V_1_ce1,
        local_input_V_1_q1,
        local_input_V_1_address2,
        local_input_V_1_ce2,
        local_input_V_1_q2,
        local_input_V_1_address3,
        local_input_V_1_ce3,
        local_input_V_1_q3,
        local_output_V_1_address0,
        local_output_V_1_ce0,
        local_output_V_1_we0,
        local_output_V_1_d0,
        local_output_V_address0,
        local_output_V_ce0,
        local_output_V_we0,
        local_output_V_d0,
        max_grad_V_1_out,
        max_grad_V_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] local_input_V_address0;
output   local_input_V_ce0;
input  [9:0] local_input_V_q0;
output  [8:0] local_input_V_address1;
output   local_input_V_ce1;
input  [9:0] local_input_V_q1;
output  [8:0] local_input_V_address2;
output   local_input_V_ce2;
input  [9:0] local_input_V_q2;
output  [8:0] local_input_V_address3;
output   local_input_V_ce3;
input  [9:0] local_input_V_q3;
output  [8:0] local_input_V_1_address0;
output   local_input_V_1_ce0;
input  [9:0] local_input_V_1_q0;
output  [8:0] local_input_V_1_address1;
output   local_input_V_1_ce1;
input  [9:0] local_input_V_1_q1;
output  [8:0] local_input_V_1_address2;
output   local_input_V_1_ce2;
input  [9:0] local_input_V_1_q2;
output  [8:0] local_input_V_1_address3;
output   local_input_V_1_ce3;
input  [9:0] local_input_V_1_q3;
output  [8:0] local_output_V_1_address0;
output   local_output_V_1_ce0;
output   local_output_V_1_we0;
output  [9:0] local_output_V_1_d0;
output  [8:0] local_output_V_address0;
output   local_output_V_ce0;
output   local_output_V_we0;
output  [9:0] local_output_V_d0;
output  [15:0] max_grad_V_1_out;
output   max_grad_V_1_out_ap_vld;

reg ap_idle;
reg[8:0] local_input_V_address0;
reg local_input_V_ce0;
reg[8:0] local_input_V_address1;
reg local_input_V_ce1;
reg[8:0] local_input_V_address2;
reg local_input_V_ce2;
reg[8:0] local_input_V_address3;
reg local_input_V_ce3;
reg[8:0] local_input_V_1_address0;
reg local_input_V_1_ce0;
reg[8:0] local_input_V_1_address1;
reg local_input_V_1_ce1;
reg[8:0] local_input_V_1_address2;
reg local_input_V_1_ce2;
reg[8:0] local_input_V_1_address3;
reg local_input_V_1_ce3;
reg[8:0] local_output_V_1_address0;
reg local_output_V_1_ce0;
reg local_output_V_1_we0;
reg[9:0] local_output_V_1_d0;
reg[8:0] local_output_V_address0;
reg local_output_V_ce0;
reg local_output_V_we0;
reg[9:0] local_output_V_d0;
reg max_grad_V_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln42_reg_1274;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [9:0] grp_fu_332_p4;
reg   [9:0] reg_341;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] empty_48_reg_1323;
reg   [0:0] empty_36_reg_1327;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] empty_48_reg_1323_pp0_iter1_reg;
reg   [0:0] empty_36_reg_1327_pp0_iter1_reg;
wire   [0:0] icmp_ln42_fu_389_p2;
reg   [0:0] icmp_ln42_reg_1274_pp0_iter1_reg;
wire   [4:0] select_ln42_1_fu_418_p3;
reg   [4:0] select_ln42_1_reg_1278;
wire   [4:0] select_ln42_2_fu_432_p3;
reg   [4:0] select_ln42_2_reg_1284;
wire   [0:0] select_ln42_3_fu_446_p3;
reg   [0:0] select_ln42_3_reg_1290;
reg   [0:0] select_ln42_3_reg_1290_pp0_iter1_reg;
wire   [4:0] select_ln42_4_fu_460_p3;
reg   [4:0] select_ln42_4_reg_1296;
wire   [0:0] select_ln42_5_fu_474_p3;
reg   [0:0] select_ln42_5_reg_1302;
reg   [0:0] select_ln42_5_reg_1302_pp0_iter1_reg;
reg   [3:0] lshr_ln1_reg_1308;
wire   [0:0] trunc_ln87_fu_492_p1;
reg   [0:0] trunc_ln87_reg_1313;
reg   [0:0] trunc_ln87_reg_1313_pp0_iter1_reg;
reg   [0:0] trunc_ln87_reg_1313_pp0_iter2_reg;
wire   [0:0] empty_48_fu_556_p2;
reg   [0:0] empty_48_reg_1323_pp0_iter2_reg;
wire   [0:0] empty_36_fu_610_p2;
reg   [0:0] empty_36_reg_1327_pp0_iter2_reg;
reg   [3:0] lshr_ln2_reg_1331;
wire   [8:0] add_ln66_2_fu_740_p2;
reg   [8:0] add_ln66_2_reg_1342;
reg   [8:0] local_output_V_addr_reg_1352;
reg   [8:0] local_output_V_addr_reg_1352_pp0_iter1_reg;
reg   [8:0] local_output_V_addr_reg_1352_pp0_iter2_reg;
reg   [8:0] local_output_V_1_addr_reg_1357;
reg   [8:0] local_output_V_1_addr_reg_1357_pp0_iter1_reg;
reg   [8:0] local_output_V_1_addr_reg_1357_pp0_iter2_reg;
wire   [8:0] add_ln66_5_fu_785_p2;
reg   [8:0] add_ln66_5_reg_1372;
wire   [8:0] add_ln66_7_fu_812_p2;
reg   [8:0] add_ln66_7_reg_1392;
wire   [8:0] add_ln66_8_fu_818_p2;
reg   [8:0] add_ln66_8_reg_1397;
wire   [9:0] grp_fu_323_p4;
reg   [9:0] pixel_val_V_8_reg_1447;
wire   [9:0] pixel_val_V_9_fu_844_p4;
reg   [9:0] pixel_val_V_9_reg_1452;
wire  signed [9:0] pixel_val_V_fu_853_p4;
reg  signed [9:0] pixel_val_V_reg_1457;
wire  signed [14:0] gy_V_1_fu_955_p3;
reg  signed [14:0] gy_V_1_reg_1463;
wire   [11:0] r_V_5_fu_974_p2;
reg   [11:0] r_V_5_reg_1469;
wire   [13:0] add_ln813_fu_992_p2;
reg   [13:0] add_ln813_reg_1474;
wire  signed [9:0] pixel_val_V_12_fu_998_p4;
reg  signed [9:0] pixel_val_V_12_reg_1479;
wire   [9:0] pixel_val_V_13_fu_1007_p4;
reg   [9:0] pixel_val_V_13_reg_1485;
wire   [13:0] trunc_ln52_fu_1138_p1;
reg   [13:0] trunc_ln52_reg_1490;
wire   [15:0] gy_V_4_fu_1142_p3;
reg   [15:0] gy_V_4_reg_1496;
reg   [0:0] tmp_reg_1502;
reg   [0:0] tmp_3_reg_1507;
wire   [15:0] mag_V_fu_1199_p2;
reg   [15:0] mag_V_reg_1512;
reg   [9:0] trunc_ln7_reg_1518;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln66_4_fu_734_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln87_fu_752_p1;
wire   [63:0] zext_ln66_7_fu_767_p1;
wire   [63:0] zext_ln66_8_fu_779_p1;
wire   [63:0] zext_ln66_11_fu_806_p1;
wire   [63:0] zext_ln66_5_fu_824_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln66_9_fu_829_p1;
wire   [63:0] zext_ln66_12_fu_834_p1;
wire   [63:0] zext_ln66_13_fu_839_p1;
reg   [4:0] px_fu_110;
wire   [4:0] add_ln46_fu_632_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_px_load;
reg   [4:0] y_fu_114;
reg   [4:0] ap_sig_allocacmp_y_2;
reg   [9:0] indvar_flatten_fu_118;
wire   [9:0] add_ln42_2_fu_395_p2;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [15:0] max_grad_V_fu_122;
wire   [15:0] max_grad_V_2_fu_1229_p3;
wire    ap_block_pp0_stage0_01001;
reg   [0:0] grp_fu_323_p3;
reg   [0:0] grp_fu_332_p3;
wire   [4:0] add_ln42_fu_377_p2;
wire   [0:0] icmp_ln46_fu_404_p2;
wire   [4:0] empty_37_fu_426_p2;
wire   [0:0] cmp74_not_mid1_fu_440_p2;
wire   [0:0] cmp74_not_fu_371_p2;
wire   [4:0] add_ln42_1_fu_454_p2;
wire   [0:0] cmp76_2_not_mid1_fu_468_p2;
wire   [0:0] cmp76_2_not_fu_383_p2;
wire   [4:0] select_ln42_fu_410_p3;
wire   [0:0] empty_39_fu_502_p2;
wire   [0:0] empty_38_fu_496_p2;
wire   [0:0] empty_41_fu_514_p2;
wire   [0:0] empty_40_fu_508_p2;
wire   [0:0] empty_43_fu_526_p2;
wire   [0:0] empty_42_fu_520_p2;
wire   [0:0] empty_45_fu_538_p2;
wire   [0:0] empty_44_fu_532_p2;
wire   [0:0] empty_47_fu_550_p2;
wire   [0:0] empty_46_fu_544_p2;
wire   [0:0] empty_28_fu_562_p2;
wire   [0:0] empty_29_fu_568_p2;
wire   [0:0] empty_31_fu_580_p2;
wire   [0:0] empty_30_fu_574_p2;
wire   [0:0] empty_33_fu_592_p2;
wire   [0:0] empty_32_fu_586_p2;
wire   [0:0] empty_35_fu_604_p2;
wire   [0:0] empty_34_fu_598_p2;
wire   [4:0] empty_fu_616_p2;
wire   [5:0] tmp_6_fu_660_p3;
wire   [8:0] tmp_5_fu_653_p3;
wire   [8:0] zext_ln66_fu_667_p1;
wire   [5:0] tmp_8_fu_684_p3;
wire   [8:0] tmp_7_fu_677_p3;
wire   [8:0] zext_ln66_1_fu_691_p1;
wire   [5:0] tmp_s_fu_708_p3;
wire   [8:0] tmp_9_fu_701_p3;
wire   [8:0] zext_ln66_2_fu_715_p1;
wire   [8:0] sub_ln66_1_fu_695_p2;
wire   [8:0] zext_ln66_3_fu_725_p1;
wire   [8:0] add_ln66_1_fu_728_p2;
wire   [8:0] sub_ln66_2_fu_719_p2;
wire   [8:0] sub_ln66_fu_671_p2;
wire   [8:0] add_ln87_fu_746_p2;
wire   [8:0] zext_ln66_6_fu_758_p1;
wire   [8:0] add_ln66_3_fu_761_p2;
wire   [8:0] add_ln66_4_fu_773_p2;
wire   [3:0] add_ln66_fu_791_p2;
wire   [8:0] zext_ln66_10_fu_796_p1;
wire   [8:0] add_ln66_6_fu_800_p2;
wire  signed [10:0] sext_ln1270_fu_862_p1;
wire   [10:0] r_V_1_fu_865_p2;
wire  signed [12:0] gx_V_6_fu_871_p3;
wire   [10:0] shl_ln_fu_883_p3;
wire  signed [11:0] sext_ln1273_fu_890_p1;
wire   [11:0] shl_ln1347_1_fu_900_p3;
wire  signed [12:0] sext_ln813_fu_907_p1;
wire   [11:0] r_V_3_fu_894_p2;
wire  signed [11:0] pixel_val_V_2_cast9_fu_917_p1;
wire   [11:0] tmp36_fu_920_p2;
wire   [13:0] tmp_1_fu_926_p3;
wire  signed [14:0] sext_ln813_3_fu_934_p1;
wire  signed [14:0] sext_ln52_fu_879_p1;
wire   [12:0] gx_V_fu_911_p2;
wire   [12:0] gx_V_1_fu_944_p3;
wire   [14:0] gy_V_fu_938_p2;
wire   [10:0] shl_ln1273_1_fu_962_p3;
wire  signed [11:0] sext_ln1273_1_fu_970_p1;
wire   [12:0] shl_ln1_fu_980_p3;
wire  signed [13:0] gx_V_1_cast_fu_951_p1;
wire  signed [13:0] sext_ln813_1_fu_988_p1;
wire   [13:0] shl_ln813_2_fu_1019_p3;
wire  signed [14:0] sext_ln813_2_fu_1030_p1;
wire  signed [14:0] sext_ln62_fu_1026_p1;
wire  signed [10:0] sext_ln1270_1_fu_1039_p1;
wire   [10:0] r_V_8_fu_1042_p2;
wire   [12:0] shl_ln813_3_fu_1048_p3;
wire   [11:0] shl_ln2_fu_1067_p3;
wire   [14:0] gx_V_3_fu_1033_p2;
wire  signed [14:0] sext_ln813_4_fu_1075_p1;
wire   [14:0] add_ln813_2_fu_1079_p2;
wire  signed [14:0] sext_ln62_1_fu_1056_p1;
wire   [10:0] r_V_10_fu_1060_p3;
wire  signed [11:0] r_V_11_cast_fu_1094_p1;
wire  signed [11:0] pixel_val_V_5_cast10_fu_1091_p1;
wire   [11:0] tmp4_fu_1098_p2;
wire   [13:0] tmp_2_fu_1104_p3;
wire   [14:0] add_ln813_4_fu_1116_p2;
wire  signed [15:0] sext_ln813_5_fu_1121_p1;
wire  signed [15:0] tmp35_fu_1112_p1;
wire   [14:0] gx_V_4_fu_1085_p2;
wire   [14:0] gx_V_5_fu_1131_p3;
wire  signed [15:0] sext_ln52_1_fu_1016_p1;
wire   [15:0] gy_V_3_fu_1125_p2;
wire   [13:0] abs_gx_V_fu_1165_p2;
wire   [13:0] abs_gx_V_1_fu_1170_p3;
wire   [15:0] abs_gy_V_fu_1180_p2;
wire   [15:0] abs_gy_V_1_fu_1185_p3;
wire   [15:0] zext_ln75_fu_1176_p1;
wire   [11:0] trunc_ln813_1_fu_1195_p1;
wire   [11:0] trunc_ln813_fu_1191_p1;
wire   [11:0] add_ln77_fu_1205_p2;
wire   [0:0] icmp_ln1649_fu_1224_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage0;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1014;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U5(
    .din0(local_input_V_1_q3),
    .din1(local_input_V_q3),
    .din2(grp_fu_323_p3),
    .dout(grp_fu_323_p4)
);

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U6(
    .din0(local_input_V_1_q0),
    .din1(local_input_V_q0),
    .din2(grp_fu_332_p3),
    .dout(grp_fu_332_p4)
);

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U7(
    .din0(local_input_V_q2),
    .din1(local_input_V_1_q2),
    .din2(trunc_ln87_reg_1313),
    .dout(pixel_val_V_9_fu_844_p4)
);

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U8(
    .din0(local_input_V_1_q1),
    .din1(local_input_V_q1),
    .din2(trunc_ln87_reg_1313),
    .dout(pixel_val_V_fu_853_p4)
);

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U9(
    .din0(local_input_V_1_q2),
    .din1(local_input_V_q2),
    .din2(trunc_ln87_reg_1313_pp0_iter1_reg),
    .dout(pixel_val_V_12_fu_998_p4)
);

sobel_filter_mux_21_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 10 ))
mux_21_10_1_1_U10(
    .din0(local_input_V_q1),
    .din1(local_input_V_1_q1),
    .din2(trunc_ln87_reg_1313_pp0_iter1_reg),
    .dout(pixel_val_V_13_fu_1007_p4)
);

sobel_filter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln42_fu_389_p2 == 1'd0))) begin
            indvar_flatten_fu_118 <= add_ln42_2_fu_395_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_118 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            max_grad_V_fu_122 <= 16'd0;
        end else if ((1'b1 == ap_condition_1014)) begin
            max_grad_V_fu_122 <= max_grad_V_2_fu_1229_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln42_fu_389_p2 == 1'd0))) begin
            px_fu_110 <= add_ln46_fu_632_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            px_fu_110 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln42_fu_389_p2 == 1'd0))) begin
            y_fu_114 <= select_ln42_1_fu_418_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_114 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln42_5_reg_1302 == 1'd0))) begin
        add_ln66_2_reg_1342 <= add_ln66_2_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (empty_36_reg_1327 == 1'd0) & (empty_48_reg_1323 == 1'd0))) begin
        add_ln66_5_reg_1372 <= add_ln66_5_fu_785_p2;
        add_ln66_7_reg_1392 <= add_ln66_7_fu_812_p2;
        add_ln66_8_reg_1397 <= add_ln66_8_fu_818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (empty_36_reg_1327_pp0_iter1_reg == 1'd0) & (empty_48_reg_1323_pp0_iter1_reg == 1'd0))) begin
        add_ln813_reg_1474[13 : 2] <= add_ln813_fu_992_p2[13 : 2];
        gy_V_1_reg_1463[14 : 2] <= gy_V_1_fu_955_p3[14 : 2];
        pixel_val_V_12_reg_1479 <= pixel_val_V_12_fu_998_p4;
        r_V_5_reg_1469[11 : 1] <= r_V_5_fu_974_p2[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_48_fu_556_p2 == 1'd0) & (icmp_ln42_fu_389_p2 == 1'd0))) begin
        empty_36_reg_1327 <= empty_36_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_36_reg_1327_pp0_iter1_reg <= empty_36_reg_1327;
        empty_36_reg_1327_pp0_iter2_reg <= empty_36_reg_1327_pp0_iter1_reg;
        empty_48_reg_1323_pp0_iter1_reg <= empty_48_reg_1323;
        empty_48_reg_1323_pp0_iter2_reg <= empty_48_reg_1323_pp0_iter1_reg;
        icmp_ln42_reg_1274 <= icmp_ln42_fu_389_p2;
        icmp_ln42_reg_1274_pp0_iter1_reg <= icmp_ln42_reg_1274;
        select_ln42_3_reg_1290_pp0_iter1_reg <= select_ln42_3_reg_1290;
        select_ln42_5_reg_1302_pp0_iter1_reg <= select_ln42_5_reg_1302;
        trunc_ln87_reg_1313_pp0_iter1_reg <= trunc_ln87_reg_1313;
        trunc_ln87_reg_1313_pp0_iter2_reg <= trunc_ln87_reg_1313_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln42_fu_389_p2 == 1'd0))) begin
        empty_48_reg_1323 <= empty_48_fu_556_p2;
        lshr_ln1_reg_1308 <= {{select_ln42_fu_410_p3[4:1]}};
        select_ln42_1_reg_1278 <= select_ln42_1_fu_418_p3;
        select_ln42_2_reg_1284 <= select_ln42_2_fu_432_p3;
        select_ln42_3_reg_1290 <= select_ln42_3_fu_446_p3;
        select_ln42_4_reg_1296 <= select_ln42_4_fu_460_p3;
        select_ln42_5_reg_1302 <= select_ln42_5_fu_474_p3;
        trunc_ln87_reg_1313 <= trunc_ln87_fu_492_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_36_reg_1327_pp0_iter1_reg == 1'd0) & (empty_48_reg_1323_pp0_iter1_reg == 1'd0))) begin
        gy_V_4_reg_1496[15 : 2] <= gy_V_4_fu_1142_p3[15 : 2];
        tmp_3_reg_1507 <= gy_V_4_fu_1142_p3[32'd15];
        tmp_reg_1502 <= gx_V_5_fu_1131_p3[32'd14];
        trunc_ln52_reg_1490[13 : 2] <= trunc_ln52_fu_1138_p1[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln42_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_output_V_1_addr_reg_1357 <= zext_ln87_fu_752_p1;
        local_output_V_addr_reg_1352 <= zext_ln87_fu_752_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_output_V_1_addr_reg_1357_pp0_iter1_reg <= local_output_V_1_addr_reg_1357;
        local_output_V_1_addr_reg_1357_pp0_iter2_reg <= local_output_V_1_addr_reg_1357_pp0_iter1_reg;
        local_output_V_addr_reg_1352_pp0_iter1_reg <= local_output_V_addr_reg_1352;
        local_output_V_addr_reg_1352_pp0_iter2_reg <= local_output_V_addr_reg_1352_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_36_fu_610_p2 == 1'd0) & (empty_48_fu_556_p2 == 1'd0) & (icmp_ln42_fu_389_p2 == 1'd0))) begin
        lshr_ln2_reg_1331 <= {{empty_fu_616_p2[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (empty_36_reg_1327_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (empty_48_reg_1323_pp0_iter2_reg == 1'd0))) begin
        mag_V_reg_1512[15 : 2] <= mag_V_fu_1199_p2[15 : 2];
        trunc_ln7_reg_1518 <= {{add_ln77_fu_1205_p2[11:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln42_5_reg_1302_pp0_iter1_reg == 1'd0) & (empty_36_reg_1327_pp0_iter1_reg == 1'd0) & (empty_48_reg_1323_pp0_iter1_reg == 1'd0))) begin
        pixel_val_V_13_reg_1485 <= pixel_val_V_13_fu_1007_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_36_reg_1327 == 1'd0) & (empty_48_reg_1323 == 1'd0))) begin
        pixel_val_V_8_reg_1447 <= grp_fu_323_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln42_3_reg_1290 == 1'd0) & (empty_36_reg_1327 == 1'd0) & (empty_48_reg_1323 == 1'd0))) begin
        pixel_val_V_9_reg_1452 <= pixel_val_V_9_fu_844_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_36_reg_1327 == 1'd0) & (empty_48_reg_1323 == 1'd0))) begin
        pixel_val_V_reg_1457 <= pixel_val_V_fu_853_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (empty_36_reg_1327_pp0_iter1_reg == 1'd0) & (empty_48_reg_1323_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_36_reg_1327 == 1'd0) & (empty_48_reg_1323 == 1'd0)))) begin
        reg_341 <= grp_fu_332_p4;
    end
end

always @ (*) begin
    if (((icmp_ln42_reg_1274 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln42_reg_1274_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_px_load = 5'd0;
    end else begin
        ap_sig_allocacmp_px_load = px_fu_110;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_y_2 = y_fu_114;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_323_p3 = trunc_ln87_reg_1313_pp0_iter1_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_323_p3 = trunc_ln87_reg_1313;
        end else begin
            grp_fu_323_p3 = 'bx;
        end
    end else begin
        grp_fu_323_p3 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_332_p3 = trunc_ln87_reg_1313_pp0_iter1_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_332_p3 = trunc_ln87_reg_1313;
        end else begin
            grp_fu_332_p3 = 'bx;
        end
    end else begin
        grp_fu_332_p3 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_1_address0 = zext_ln66_13_fu_839_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_1_address0 = zext_ln66_8_fu_779_p1;
    end else begin
        local_input_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_1_address1 = zext_ln66_5_fu_824_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_1_address1 = zext_ln66_11_fu_806_p1;
    end else begin
        local_input_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_1_address2 = zext_ln66_9_fu_829_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_1_address2 = zext_ln66_4_fu_734_p1;
    end else begin
        local_input_V_1_address2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_1_address3 = zext_ln66_12_fu_834_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_1_address3 = zext_ln66_7_fu_767_p1;
    end else begin
        local_input_V_1_address3 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_1_ce0 = 1'b1;
    end else begin
        local_input_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_1_ce1 = 1'b1;
    end else begin
        local_input_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_1_ce2 = 1'b1;
    end else begin
        local_input_V_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_1_ce3 = 1'b1;
    end else begin
        local_input_V_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_address0 = zext_ln66_13_fu_839_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_address0 = zext_ln66_8_fu_779_p1;
    end else begin
        local_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_address1 = zext_ln66_5_fu_824_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_address1 = zext_ln66_11_fu_806_p1;
    end else begin
        local_input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_address2 = zext_ln66_9_fu_829_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_address2 = zext_ln66_4_fu_734_p1;
    end else begin
        local_input_V_address2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_input_V_address3 = zext_ln66_12_fu_834_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_input_V_address3 = zext_ln66_7_fu_767_p1;
    end else begin
        local_input_V_address3 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_ce0 = 1'b1;
    end else begin
        local_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_ce1 = 1'b1;
    end else begin
        local_input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_ce2 = 1'b1;
    end else begin
        local_input_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_input_V_ce3 = 1'b1;
    end else begin
        local_input_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_output_V_1_address0 = local_output_V_1_addr_reg_1357_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_output_V_1_address0 = zext_ln87_fu_752_p1;
    end else begin
        local_output_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_output_V_1_ce0 = 1'b1;
    end else begin
        local_output_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_output_V_1_d0 = trunc_ln7_reg_1518;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_output_V_1_d0 = 10'd0;
    end else begin
        local_output_V_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((icmp_ln42_reg_1274 == 1'd0) & (trunc_ln87_reg_1313 == 1'd1) & (empty_48_reg_1323 == 1'd1)) | ((icmp_ln42_reg_1274 == 1'd0) & (trunc_ln87_reg_1313 == 1'd1) & (empty_36_reg_1327 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_36_reg_1327_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_48_reg_1323_pp0_iter2_reg == 1'd0) & (trunc_ln87_reg_1313_pp0_iter2_reg == 1'd1)))) begin
        local_output_V_1_we0 = 1'b1;
    end else begin
        local_output_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_output_V_address0 = local_output_V_addr_reg_1352_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_output_V_address0 = zext_ln87_fu_752_p1;
    end else begin
        local_output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_output_V_ce0 = 1'b1;
    end else begin
        local_output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        local_output_V_d0 = trunc_ln7_reg_1518;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        local_output_V_d0 = 10'd0;
    end else begin
        local_output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((icmp_ln42_reg_1274 == 1'd0) & (trunc_ln87_reg_1313 == 1'd0) & (empty_48_reg_1323 == 1'd1)) | ((icmp_ln42_reg_1274 == 1'd0) & (trunc_ln87_reg_1313 == 1'd0) & (empty_36_reg_1327 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (empty_36_reg_1327_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_48_reg_1323_pp0_iter2_reg == 1'd0) & (trunc_ln87_reg_1313_pp0_iter2_reg == 1'd0)))) begin
        local_output_V_we0 = 1'b1;
    end else begin
        local_output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln42_reg_1274_pp0_iter1_reg == 1'd1))) begin
        max_grad_V_1_out_ap_vld = 1'b1;
    end else begin
        max_grad_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign abs_gx_V_1_fu_1170_p3 = ((tmp_reg_1502[0:0] == 1'b1) ? abs_gx_V_fu_1165_p2 : trunc_ln52_reg_1490);

assign abs_gx_V_fu_1165_p2 = (14'd0 - trunc_ln52_reg_1490);

assign abs_gy_V_1_fu_1185_p3 = ((tmp_3_reg_1507[0:0] == 1'b1) ? abs_gy_V_fu_1180_p2 : gy_V_4_reg_1496);

assign abs_gy_V_fu_1180_p2 = (16'd0 - gy_V_4_reg_1496);

assign add_ln42_1_fu_454_p2 = (ap_sig_allocacmp_y_2 + 5'd2);

assign add_ln42_2_fu_395_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln42_fu_377_p2 = (ap_sig_allocacmp_y_2 + 5'd1);

assign add_ln46_fu_632_p2 = (select_ln42_fu_410_p3 + 5'd1);

assign add_ln66_1_fu_728_p2 = (sub_ln66_1_fu_695_p2 + zext_ln66_3_fu_725_p1);

assign add_ln66_2_fu_740_p2 = (sub_ln66_2_fu_719_p2 + zext_ln66_3_fu_725_p1);

assign add_ln66_3_fu_761_p2 = (sub_ln66_1_fu_695_p2 + zext_ln66_6_fu_758_p1);

assign add_ln66_4_fu_773_p2 = (sub_ln66_fu_671_p2 + zext_ln66_6_fu_758_p1);

assign add_ln66_5_fu_785_p2 = (sub_ln66_2_fu_719_p2 + zext_ln66_6_fu_758_p1);

assign add_ln66_6_fu_800_p2 = (sub_ln66_1_fu_695_p2 + zext_ln66_10_fu_796_p1);

assign add_ln66_7_fu_812_p2 = (sub_ln66_fu_671_p2 + zext_ln66_10_fu_796_p1);

assign add_ln66_8_fu_818_p2 = (sub_ln66_2_fu_719_p2 + zext_ln66_10_fu_796_p1);

assign add_ln66_fu_791_p2 = (lshr_ln2_reg_1331 + 4'd1);

assign add_ln77_fu_1205_p2 = (trunc_ln813_1_fu_1195_p1 + trunc_ln813_fu_1191_p1);

assign add_ln813_2_fu_1079_p2 = ($signed(gx_V_3_fu_1033_p2) + $signed(sext_ln813_4_fu_1075_p1));

assign add_ln813_4_fu_1116_p2 = ($signed(gy_V_1_reg_1463) + $signed(sext_ln813_4_fu_1075_p1));

assign add_ln813_fu_992_p2 = ($signed(gx_V_1_cast_fu_951_p1) + $signed(sext_ln813_1_fu_988_p1));

assign add_ln87_fu_746_p2 = (sub_ln66_fu_671_p2 + zext_ln66_3_fu_725_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1014 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (empty_36_reg_1327_pp0_iter2_reg == 1'd0) & (empty_48_reg_1323_pp0_iter2_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign cmp74_not_fu_371_p2 = ((ap_sig_allocacmp_y_2 == 5'd0) ? 1'b1 : 1'b0);

assign cmp74_not_mid1_fu_440_p2 = ((add_ln42_fu_377_p2 == 5'd0) ? 1'b1 : 1'b0);

assign cmp76_2_not_fu_383_p2 = ((add_ln42_fu_377_p2 > 5'd27) ? 1'b1 : 1'b0);

assign cmp76_2_not_mid1_fu_468_p2 = ((add_ln42_1_fu_454_p2 > 5'd27) ? 1'b1 : 1'b0);

assign empty_28_fu_562_p2 = ((select_ln42_fu_410_p3 == 5'd31) ? 1'b1 : 1'b0);

assign empty_29_fu_568_p2 = ((select_ln42_fu_410_p3 == 5'd30) ? 1'b1 : 1'b0);

assign empty_30_fu_574_p2 = ((select_ln42_fu_410_p3 == 5'd29) ? 1'b1 : 1'b0);

assign empty_31_fu_580_p2 = (empty_29_fu_568_p2 | empty_28_fu_562_p2);

assign empty_32_fu_586_p2 = ((select_ln42_fu_410_p3 == 5'd27) ? 1'b1 : 1'b0);

assign empty_33_fu_592_p2 = (empty_31_fu_580_p2 | empty_30_fu_574_p2);

assign empty_34_fu_598_p2 = ((select_ln42_fu_410_p3 == 5'd0) ? 1'b1 : 1'b0);

assign empty_35_fu_604_p2 = (empty_33_fu_592_p2 | empty_32_fu_586_p2);

assign empty_36_fu_610_p2 = (empty_35_fu_604_p2 | empty_34_fu_598_p2);

assign empty_37_fu_426_p2 = ($signed(ap_sig_allocacmp_y_2) + $signed(5'd31));

assign empty_38_fu_496_p2 = ((select_ln42_1_fu_418_p3 == 5'd31) ? 1'b1 : 1'b0);

assign empty_39_fu_502_p2 = ((select_ln42_1_fu_418_p3 == 5'd30) ? 1'b1 : 1'b0);

assign empty_40_fu_508_p2 = ((select_ln42_1_fu_418_p3 == 5'd29) ? 1'b1 : 1'b0);

assign empty_41_fu_514_p2 = (empty_39_fu_502_p2 | empty_38_fu_496_p2);

assign empty_42_fu_520_p2 = ((select_ln42_1_fu_418_p3 == 5'd28) ? 1'b1 : 1'b0);

assign empty_43_fu_526_p2 = (empty_41_fu_514_p2 | empty_40_fu_508_p2);

assign empty_44_fu_532_p2 = ((select_ln42_1_fu_418_p3 == 5'd27) ? 1'b1 : 1'b0);

assign empty_45_fu_538_p2 = (empty_43_fu_526_p2 | empty_42_fu_520_p2);

assign empty_46_fu_544_p2 = ((select_ln42_1_fu_418_p3 == 5'd0) ? 1'b1 : 1'b0);

assign empty_47_fu_550_p2 = (empty_45_fu_538_p2 | empty_44_fu_532_p2);

assign empty_48_fu_556_p2 = (empty_47_fu_550_p2 | empty_46_fu_544_p2);

assign empty_fu_616_p2 = ($signed(select_ln42_fu_410_p3) + $signed(5'd31));

assign gx_V_1_cast_fu_951_p1 = $signed(gx_V_1_fu_944_p3);

assign gx_V_1_fu_944_p3 = ((select_ln42_3_reg_1290_pp0_iter1_reg[0:0] == 1'b1) ? 13'd0 : gx_V_fu_911_p2);

assign gx_V_3_fu_1033_p2 = ($signed(sext_ln813_2_fu_1030_p1) + $signed(sext_ln62_fu_1026_p1));

assign gx_V_4_fu_1085_p2 = ($signed(add_ln813_2_fu_1079_p2) + $signed(sext_ln62_1_fu_1056_p1));

assign gx_V_5_fu_1131_p3 = ((select_ln42_5_reg_1302_pp0_iter1_reg[0:0] == 1'b1) ? gx_V_3_fu_1033_p2 : gx_V_4_fu_1085_p2);

assign gx_V_6_fu_871_p3 = {{r_V_1_fu_865_p2}, {2'd0}};

assign gx_V_fu_911_p2 = ($signed(sext_ln813_fu_907_p1) + $signed(gx_V_6_fu_871_p3));

assign gy_V_1_fu_955_p3 = ((select_ln42_3_reg_1290_pp0_iter1_reg[0:0] == 1'b1) ? 15'd0 : gy_V_fu_938_p2);

assign gy_V_3_fu_1125_p2 = ($signed(sext_ln813_5_fu_1121_p1) + $signed(tmp35_fu_1112_p1));

assign gy_V_4_fu_1142_p3 = ((select_ln42_5_reg_1302_pp0_iter1_reg[0:0] == 1'b1) ? sext_ln52_1_fu_1016_p1 : gy_V_3_fu_1125_p2);

assign gy_V_fu_938_p2 = ($signed(sext_ln813_3_fu_934_p1) + $signed(sext_ln52_fu_879_p1));

assign icmp_ln1649_fu_1224_p2 = (($signed(mag_V_reg_1512) > $signed(max_grad_V_fu_122)) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_389_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_404_p2 = ((ap_sig_allocacmp_px_load == 5'd28) ? 1'b1 : 1'b0);

assign mag_V_fu_1199_p2 = (abs_gy_V_1_fu_1185_p3 + zext_ln75_fu_1176_p1);

assign max_grad_V_1_out = max_grad_V_fu_122;

assign max_grad_V_2_fu_1229_p3 = ((icmp_ln1649_fu_1224_p2[0:0] == 1'b1) ? mag_V_reg_1512 : max_grad_V_fu_122);

assign pixel_val_V_2_cast9_fu_917_p1 = pixel_val_V_reg_1457;

assign pixel_val_V_5_cast10_fu_1091_p1 = pixel_val_V_12_reg_1479;

assign r_V_10_fu_1060_p3 = {{pixel_val_V_13_reg_1485}, {1'd0}};

assign r_V_11_cast_fu_1094_p1 = $signed(r_V_10_fu_1060_p3);

assign r_V_1_fu_865_p2 = ($signed(11'd0) - $signed(sext_ln1270_fu_862_p1));

assign r_V_3_fu_894_p2 = ($signed(12'd0) - $signed(sext_ln1273_fu_890_p1));

assign r_V_5_fu_974_p2 = ($signed(12'd0) - $signed(sext_ln1273_1_fu_970_p1));

assign r_V_8_fu_1042_p2 = ($signed(11'd0) - $signed(sext_ln1270_1_fu_1039_p1));

assign select_ln42_1_fu_418_p3 = ((icmp_ln46_fu_404_p2[0:0] == 1'b1) ? add_ln42_fu_377_p2 : ap_sig_allocacmp_y_2);

assign select_ln42_2_fu_432_p3 = ((icmp_ln46_fu_404_p2[0:0] == 1'b1) ? ap_sig_allocacmp_y_2 : empty_37_fu_426_p2);

assign select_ln42_3_fu_446_p3 = ((icmp_ln46_fu_404_p2[0:0] == 1'b1) ? cmp74_not_mid1_fu_440_p2 : cmp74_not_fu_371_p2);

assign select_ln42_4_fu_460_p3 = ((icmp_ln46_fu_404_p2[0:0] == 1'b1) ? add_ln42_1_fu_454_p2 : add_ln42_fu_377_p2);

assign select_ln42_5_fu_474_p3 = ((icmp_ln46_fu_404_p2[0:0] == 1'b1) ? cmp76_2_not_mid1_fu_468_p2 : cmp76_2_not_fu_383_p2);

assign select_ln42_fu_410_p3 = ((icmp_ln46_fu_404_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_px_load);

assign sext_ln1270_1_fu_1039_p1 = pixel_val_V_12_reg_1479;

assign sext_ln1270_fu_862_p1 = $signed(pixel_val_V_8_reg_1447);

assign sext_ln1273_1_fu_970_p1 = $signed(shl_ln1273_1_fu_962_p3);

assign sext_ln1273_fu_890_p1 = $signed(shl_ln_fu_883_p3);

assign sext_ln52_1_fu_1016_p1 = gy_V_1_reg_1463;

assign sext_ln52_fu_879_p1 = gx_V_6_fu_871_p3;

assign sext_ln62_1_fu_1056_p1 = $signed(shl_ln813_3_fu_1048_p3);

assign sext_ln62_fu_1026_p1 = $signed(shl_ln813_2_fu_1019_p3);

assign sext_ln813_1_fu_988_p1 = $signed(shl_ln1_fu_980_p3);

assign sext_ln813_2_fu_1030_p1 = $signed(add_ln813_reg_1474);

assign sext_ln813_3_fu_934_p1 = $signed(tmp_1_fu_926_p3);

assign sext_ln813_4_fu_1075_p1 = $signed(shl_ln2_fu_1067_p3);

assign sext_ln813_5_fu_1121_p1 = $signed(add_ln813_4_fu_1116_p2);

assign sext_ln813_fu_907_p1 = $signed(shl_ln1347_1_fu_900_p3);

assign shl_ln1273_1_fu_962_p3 = {{reg_341}, {1'd0}};

assign shl_ln1347_1_fu_900_p3 = {{pixel_val_V_reg_1457}, {2'd0}};

assign shl_ln1_fu_980_p3 = {{grp_fu_323_p4}, {3'd0}};

assign shl_ln2_fu_1067_p3 = {{reg_341}, {2'd0}};

assign shl_ln813_2_fu_1019_p3 = {{r_V_5_reg_1469}, {2'd0}};

assign shl_ln813_3_fu_1048_p3 = {{r_V_8_fu_1042_p2}, {2'd0}};

assign shl_ln_fu_883_p3 = {{pixel_val_V_9_reg_1452}, {1'd0}};

assign sub_ln66_1_fu_695_p2 = (tmp_7_fu_677_p3 - zext_ln66_1_fu_691_p1);

assign sub_ln66_2_fu_719_p2 = (tmp_9_fu_701_p3 - zext_ln66_2_fu_715_p1);

assign sub_ln66_fu_671_p2 = (tmp_5_fu_653_p3 - zext_ln66_fu_667_p1);

assign tmp35_fu_1112_p1 = $signed(tmp_2_fu_1104_p3);

assign tmp36_fu_920_p2 = ($signed(r_V_3_fu_894_p2) - $signed(pixel_val_V_2_cast9_fu_917_p1));

assign tmp4_fu_1098_p2 = ($signed(r_V_11_cast_fu_1094_p1) + $signed(pixel_val_V_5_cast10_fu_1091_p1));

assign tmp_1_fu_926_p3 = {{tmp36_fu_920_p2}, {2'd0}};

assign tmp_2_fu_1104_p3 = {{tmp4_fu_1098_p2}, {2'd0}};

assign tmp_5_fu_653_p3 = {{select_ln42_1_reg_1278}, {4'd0}};

assign tmp_6_fu_660_p3 = {{select_ln42_1_reg_1278}, {1'd0}};

assign tmp_7_fu_677_p3 = {{select_ln42_2_reg_1284}, {4'd0}};

assign tmp_8_fu_684_p3 = {{select_ln42_2_reg_1284}, {1'd0}};

assign tmp_9_fu_701_p3 = {{select_ln42_4_reg_1296}, {4'd0}};

assign tmp_s_fu_708_p3 = {{select_ln42_4_reg_1296}, {1'd0}};

assign trunc_ln52_fu_1138_p1 = gx_V_5_fu_1131_p3[13:0];

assign trunc_ln813_1_fu_1195_p1 = abs_gy_V_1_fu_1185_p3[11:0];

assign trunc_ln813_fu_1191_p1 = abs_gx_V_1_fu_1170_p3[11:0];

assign trunc_ln87_fu_492_p1 = select_ln42_fu_410_p3[0:0];

assign zext_ln66_10_fu_796_p1 = add_ln66_fu_791_p2;

assign zext_ln66_11_fu_806_p1 = add_ln66_6_fu_800_p2;

assign zext_ln66_12_fu_834_p1 = add_ln66_7_reg_1392;

assign zext_ln66_13_fu_839_p1 = add_ln66_8_reg_1397;

assign zext_ln66_1_fu_691_p1 = tmp_8_fu_684_p3;

assign zext_ln66_2_fu_715_p1 = tmp_s_fu_708_p3;

assign zext_ln66_3_fu_725_p1 = lshr_ln1_reg_1308;

assign zext_ln66_4_fu_734_p1 = add_ln66_1_fu_728_p2;

assign zext_ln66_5_fu_824_p1 = add_ln66_2_reg_1342;

assign zext_ln66_6_fu_758_p1 = lshr_ln2_reg_1331;

assign zext_ln66_7_fu_767_p1 = add_ln66_3_fu_761_p2;

assign zext_ln66_8_fu_779_p1 = add_ln66_4_fu_773_p2;

assign zext_ln66_9_fu_829_p1 = add_ln66_5_reg_1372;

assign zext_ln66_fu_667_p1 = tmp_6_fu_660_p3;

assign zext_ln75_fu_1176_p1 = abs_gx_V_1_fu_1170_p3;

assign zext_ln87_fu_752_p1 = add_ln87_fu_746_p2;

always @ (posedge ap_clk) begin
    gy_V_1_reg_1463[1:0] <= 2'b00;
    r_V_5_reg_1469[0] <= 1'b0;
    add_ln813_reg_1474[1:0] <= 2'b00;
    trunc_ln52_reg_1490[1:0] <= 2'b00;
    gy_V_4_reg_1496[1:0] <= 2'b00;
    mag_V_reg_1512[1:0] <= 2'b00;
end

endmodule //sobel_filter_sobel_filter_Pipeline_ROW_LOOP_COL_LOOP
